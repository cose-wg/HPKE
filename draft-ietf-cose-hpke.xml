<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.1 (Ruby 3.0.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="pre5378Trust200902" docName="draft-ietf-cose-hpke-06" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="COSE HPKE">Use of Hybrid Public-Key Encryption (HPKE) with CBOR Object Signing and Encryption (COSE)</title>

    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization></organization>
      <address>
        <postal>
          <country>Austria</country>
        </postal>
        <email>hannes.tschofenig@gmx.net</email>
      </address>
    </author>
    <author initials="O." surname="Steele" fullname="Orie Steele" role="editor">
      <organization>Transmute</organization>
      <address>
        <postal>
          <country>United States</country>
        </postal>
        <email>orie@transmute.industries</email>
      </address>
    </author>
    <author initials="D." surname="Ajitomi" fullname="Daisuke Ajitomi">
      <organization></organization>
      <address>
        <postal>
          <country>Japan</country>
        </postal>
        <email>dajiaji@gmail.com</email>
      </address>
    </author>
    <author initials="L." surname="Lundblade" fullname="Laurence Lundblade">
      <organization>Security Theory LLC</organization>
      <address>
        <postal>
          <country>United States</country>
        </postal>
        <email>lgl@securitytheory.com</email>
      </address>
    </author>

    <date year="2023" month="October" day="03"/>

    <area>Security</area>
    <workgroup>COSE</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 53?>

<t>This specification defines hybrid public-key encryption (HPKE) for use with 
CBOR Object Signing and Encryption (COSE). HPKE offers a variant of
public-key encryption of arbitrary-sized plaintexts for a recipient public key.</t>

<t>HPKE works for any combination of an asymmetric key encapsulation mechanism (KEM),
key derivation function (KDF), and authenticated encryption with
additional data (AEAD) function. Authentication for HPKE in COSE is
provided by COSE-native security mechanisms.</t>

<t>This document defines the use of the HPKE with COSE.</t>



    </abstract>



  </front>

  <middle>


<?line 66?>

<section anchor="introduction"><name>Introduction</name>

<t>Hybrid public-key encryption (HPKE) <xref target="RFC9180"/> is a scheme that 
provides public key encryption of arbitrary-sized plaintexts given a 
recipient's public key. HPKE utilizes a non-interactive ephemeral-static 
Diffie-Hellman exchange to establish a shared secret. The motivation for
standardizing a public key encryption scheme is explained in the introduction
of <xref target="RFC9180"/>.</t>

<t>The HPKE specification defines several features for use with public key encryption
and a subset of those features is applied to COSE (<xref target="RFC9052"/>, <xref target="RFC9053"/>). Since COSE provides
constructs for authentication, those are not re-used from the HPKE specification.
This specification uses the "base" mode, as it is called in HPKE specification
language.</t>

</section>
<section anchor="conventions-and-terminology"><name>Conventions and Terminology</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
"SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
when, and only when, they appear in all capitals, as shown here.</t>

<t>This specification uses the following abbreviations and terms:</t>

<t><list style="symbols">
  <t>Content-encryption key (CEK), a term defined in CMS <xref target="RFC2630"/>.</t>
  <t>Hybrid Public Key Encryption (HPKE) is defined in <xref target="RFC9180"/>.</t>
  <t>pkR is the public key of the recipient, as defined in <xref target="RFC9180"/>.</t>
  <t>skR is the private key of the recipient, as defined in <xref target="RFC9180"/>.</t>
  <t>Key Encapsulation Mechanism (KEM), see <xref target="RFC9180"/>.</t>
  <t>Key Derivation Function (KDF), see <xref target="RFC9180"/>.</t>
  <t>Authenticated Encryption with Associated Data (AEAD), see <xref target="RFC9180"/>.</t>
  <t>Additional Authenticated Data (AAD), see <xref target="RFC9180"/>.</t>
</list></t>

</section>
<section anchor="hpke-for-cose"><name>HPKE for COSE</name>

<section anchor="overview"><name>Overview</name>

<t>This specification supports two uses of HPKE in COSE, namely</t>

<t><list style="symbols">
  <t>HPKE in a single recipient setup.
This use case utilizes a one layer COSE structure. 
<xref target="one-layer"/> provides the details.</t>
  <t>HPKE in a multiple recipient setup. 
This use case requires a two layer COSE structure.  <xref target="two-layer"/> 
provides the details. While it is possible to support the single 
recipient use case with a two layer structure, the single 
layer setup is more efficient.</t>
</list></t>

<t>In both cases a new COSE header parameter, called 'encapsulated_key',
is used to convey the content of the enc structure defined in the HPKE
specification. "Enc" represents the serialized public key.</t>

<t>When the alg value is set to any of algorithms registered by this
specification then the 'encapsulated_key' header parameter MUST
be present in the unprotected header parameter.</t>

<t>The 'encapsulated_key' parameter contains the encapsulated key, which is
output of the HPKE KEM, and is a bstr.</t>

<section anchor="one-layer"><name>Single Recipient / One Layer Structure</name>

<t>With the one layer structure the information carried inside the 
COSE_recipient structure is embedded inside the COSE_Encrypt0.</t>

<t>HPKE is used to directly encrypt the plaintext. The resulting ciphertext
MAY be included in the COSE_Encrypt0 or MAY be detached. If a payload is
transported separately then it is called "detached content". A nil CBOR
object is placed in the location of the ciphertext. See Section 5
of <xref target="RFC9052"/> for a description of detached payloads.</t>

<t>The sender MUST set the alg parameter in the protected header, which
indicates the use of HPKE.</t>

<t>The sender MUST place the 'encapsulated_key' parameter into the unprotected
header. Although the use of the kid parameter in COSE_Encrypt0 is
discouraged by RFC 9052, this specification allows profiles of this
specification to use the kid parameter (or other parameters) to
identify the static recipient public key used by the sender. If the
COSE_Encrypt0 contains the kid then the recipient may use it to
select the appropriate private key.</t>

<t><xref target="cddl-hpke-one-layer"/> shows the COSE_Encrypt0 CDDL structure.</t>

<figure title="CDDL for HPKE-based COSE_Encrypt0 Structure" anchor="cddl-hpke-one-layer"><artwork><![CDATA[
COSE_Encrypt0_Tagged = #6.16(COSE_Encrypt0)

; Layer 0
COSE_Encrypt0 = [
    Headers,
    ciphertext : bstr / nil,
]
]]></artwork></figure>

<t>The COSE_Encrypt0 MAY be tagged or untagged.</t>

<t>An example is shown in <xref target="one-layer-example"/>.</t>

</section>
<section anchor="two-layer"><name>Multiple Recipients / Two Layer Structure</name>

<t>With the two layer structure the HPKE information is conveyed in the COSE_recipient 
structure, i.e. one COSE_recipient structure per recipient.</t>

<t>In this approach the following layers are involved:</t>

<t><list style="symbols">
  <t>Layer 0 (corresponding to the COSE_Encrypt structure) contains the content (plaintext)
encrypted with the CEK. This ciphertext MAY be detached. If not detached, then
it is included in the COSE_Encrypt structure.</t>
  <t>Layer 1 (corresponding to a recipient structure) contains parameters needed for 
HPKE to generate a shared secret used to encrypt the CEK. This layer conveys the 
encrypted CEK in the encCEK structure. The protected header MUST contain the HPKE 
alg parameter and the unprotected header MUST contain the 'encapsulated_key' parameter.
The unprotected header MAY contain the kid parameter to identify the static recipient
public key the sender has been using with HPKE.</t>
</list></t>

<t>This two-layer structure is used to encrypt content that can also be shared with
multiple parties at the expense of a single additional encryption operation.
As stated above, the specification uses a CEK to encrypt the content at layer 0.</t>

<t>The COSE_recipient structure, shown in <xref target="cddl-hpke"/>, is repeated for each
recipient.</t>

<figure title="CDDL for HPKE-based COSE_Encrypt Structure" anchor="cddl-hpke"><artwork><![CDATA[
COSE_Encrypt_Tagged = #6.96(COSE_Encrypt)
 
/ Layer 0 /
COSE_Encrypt = [
  Headers,
  ciphertext : bstr / nil,
  recipients : + COSE_recipient
]

/ Layer 1 /
COSE_recipient = [
  protected   : bstr .cbor header_map,
  unprotected : header_map,
  encCEK      : bstr,
]

header_map = {
  Generic_Headers,
  * label => values,
}
]]></artwork></figure>

<t>The COSE_Encrypt MAY be tagged or untagged.</t>

<t>An example is shown in <xref target="two-layer-example"/>.</t>

</section>
</section>
</section>
<section anchor="ciphersuite-registration"><name>Ciphersuite Registration</name>

<t>This specification registers a number of ciphersuites for use with HPKE.
A ciphersuite is thereby a combination of several algorithm configurations:</t>

<t><list style="symbols">
  <t>HPKE Mode</t>
  <t>KEM algorithm</t>
  <t>KDF algorithm</t>
  <t>AEAD algorithm</t>
</list></t>

<t>For better readability of the algorithm combination ciphersuites labels are
build according to the following scheme:</t>

<figure><artwork><![CDATA[
HPKE-<Version>-<Mode>-<KEM>-<KDF>-<AEAD>
]]></artwork></figure>

<t>For a list of ciphersuite registrations, please see <xref target="IANA"/>.</t>

</section>
<section anchor="examples"><name>Examples</name>

<section anchor="one-layer-example"><name>Single Recipient / One Layer Example</name>

<t>This example assumes that a sender wants to communicate an
encrypted payload to a single recipient in the most efficient way.</t>

<t>An example of the COSE_Encrypt0 structure using the HPKE scheme is
shown in <xref target="hpke-example-one"/>. Line breaks and comments have been inserted
for better readability.</t>

<t>This example uses HPKE-v1-Base-P256-SHA256-AES128GCM as the algorithm,
which correspond to the following HPKE algorithm combination:</t>

<t><list style="symbols">
  <t>KEM: DHKEM(P-256, HKDF-SHA256)</t>
  <t>KDF: HKDF-SHA256</t>
  <t>AEAD: AES-128-GCM</t>
  <t>Mode: Base</t>
  <t>payload: "This is the content"</t>
  <t>aad: ""</t>
</list></t>

<figure title="COSE_Encrypt0 Example for HPKE" anchor="hpke-example-one"><artwork><![CDATA[
16([
    / alg = HPKE-v1-Base-P256-SHA256-AES128GCM /
    h'a1011823',
    {
        / kid /
        4: h'3031',
        / encapsulated_key /
        -4: h'048c6f75e463a773082f3cb0d3a701348a578c67
              80aba658646682a9af7291dfc277ec93c3d58707
              818286c1097825457338dc3dcaff367e2951342e
              9db30dc0e7',
    },
    / encrypted plaintext /
    h'ee22206308e478c279b94bb071f3a5fbbac412a6effe34195f7
      c4169d7d8e81666d8be13',
])
]]></artwork></figure>

</section>
<section anchor="two-layer-example"><name>Multiple Recipients / Two Layer</name>

<t>In this example we assume that a sender wants to transmit a
payload to two recipients using the two-layer structure.
Note that it is possible to send two single-layer payloads, 
although it will be less efficient.</t>

<t>An example of the COSE_Encrypt structure using the HPKE scheme is
shown in <xref target="hpke-example-two"/>. Line breaks and comments have been
inserted for better readability.</t>

<t>This example uses AES-128-GCM for encryption of the plaintext
"This is the content." with aad="" at layer 0. The ciphertext is
detached.</t>

<t>At the recipient structure at layer 1, this example uses
HPKE-v1-Base-P256-SHA256-AES128GCM as the algorithm, which
correspond to the following HPKE algorithm combination:</t>

<t><list style="symbols">
  <t>KEM: DHKEM(P-256, HKDF-SHA256)</t>
  <t>KDF: HKDF-SHA256</t>
  <t>AEAD: AES-128-GCM</t>
  <t>Mode: Base</t>
</list></t>

<figure title="COSE_Encrypt Example for HPKE" anchor="hpke-example-two"><artwork><![CDATA[
96_0([
    / alg = AES-128-GCM (1) /
    h'a10101',
    {
      / iv /
      5: h'67303696a1cc2b6a64867096'
    },
    / detached ciphertext /
    h'',
    [
        [
            / alg = HPKE-v1-Base-P256-SHA256-AES128GCM /
            h'a1011823',
            {
                / kid /
                4: h'3031',
                / encapsulated_key /
                36: h'0421ccd1b00dd958d77e10399c
                      97530fcbb91a1dc71cb3bf41d9
                      9fd39f22918505c973816ecbca
                      6de507c4073d05cceff73e0d35
                      f60e2373e09a9433be9e95e53c',
            },
            / ciphertext containing encrypted CEK /
            h'bb2f1433546c55fb38d6f23f5cd95e1d72eb4
              c129b99a165cd5a28bd75859c10939b7e4d',
        ],
        [
            / alg = HPKE-v1-Base-P256-SHA256-AES128GCM /
            h'a1011823',
            {
                / kid /
                4: h'313233', // kid
                / encapsulated_key /
                -4: h'6de507c4073d05cceff73e0d35
                      f60e2373e09a9433be9e95e53c
                      9fd39f22918505c973816ecbca
                      6de507c4073d05cceff73e0d35
                      f60e2373e09a9433be9e95e53c',
            },
            / ciphertext containing encrypted CEK /
            h'c4169d7d8e81666d8be13bb2f1433546c55fb
              c129b99a165cd5a28bd75859c10939b7e4d',
        ]        
    ],
])
]]></artwork></figure>

<t>To offer authentication of the sender the payload in <xref target="hpke-example-two"/>
is signed with a COSE_Sign1 wrapper, which is outlined in <xref target="hpke-example-sign"/>.
The payload in <xref target="hpke-example-sign"/> is meant to contain the content of
<xref target="hpke-example-two"/>.</t>

<figure title="COSE_Encrypt Example for HPKE" anchor="hpke-example-sign"><artwork><![CDATA[
18(
  [
    / protected / h'a10126' / {
            \ alg \ 1:-7 \ ECDSA 256 \
          } / ,
    / unprotected / {
          / kid / 4:'sender@example.com'
        },
    / payload /     h'AA19...B80C',
    / signature /   h'E3B8...25B8'
  ]
)
]]></artwork></figure>

</section>
</section>
<section anchor="sec-cons"><name>Security Considerations</name>

<t>This specification is based on HPKE and the security considerations of
<xref target="RFC9180"/> are therefore applicable also to this specification.</t>

<t>HPKE assumes the sender is in possession of the public key of the recipient and
HPKE COSE makes the same assumptions. Hence, some form of public key distribution
mechanism is assumed to exist but outside the scope of this document.</t>

<t>HPKE relies on a source of randomness to be available on the device. Additionally, 
with the two layer structure the CEK is randomly generated and it MUST be
ensured that the guidelines in <xref target="RFC8937"/> for random number generations are followed.</t>

<t>HPKE in Base mode does not offer authentication as part of the HPKE KEM. In this
case COSE constructs like COSE_Sign, COSE_Sign1, COSE_MAC, or COSE_MAC0 can be
used to add authentication. HPKE also offers modes that offer authentication.</t>

<t>If COSE_Encrypt or COSE_Encrypt0 is used with a detached ciphertext then the
subsequently applied integrity protection via COSE_Sign, COSE_Sign1, COSE_MAC, 
or COSE_MAC0 does not cover this detached ciphertext. Implementers MUST ensure
that the detached ciphertext also experiences integrity protection. This is, for
example, the case when an AEAD cipher is used to produce the detached ciphertext
but may not be guaranteed by non-AEAD ciphers.</t>

</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>This document requests IANA to add new values to the 'COSE Algorithms' and to 
the 'COSE Header Parameters' registries in the 'Standards Action 
With Expert Review category.</t>

<section anchor="cose-algorithms-registry"><name>COSE Algorithms Registry</name>

<t><list style="symbols">
  <t>Name: HPKE-v1-Base-P256-SHA256-AES128GCM</t>
  <t>Value: TBD1 (Assumed: 35)</t>
  <t>Description: Cipher suite for COSE-HPKE version 1 in Base Mode that uses the DHKEM(P-256, HKDF-SHA256) KEM, the HKDF-SHA256 KDF and the AES-128-GCM AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
  <t>Name: HPKE-v1-Base-P256-SHA256-ChaCha20Poly1305</t>
  <t>Value: TBD2 (Assumed: 36)</t>
  <t>Description: Cipher suite for COSE-HPKE version 1 in Base Mode that uses the DHKEM(P-256, HKDF-SHA256) KEM, the HKDF-SHA256 KDF and the ChaCha20Poly1305 AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
  <t>Name: HPKE-v1-Base-P384-SHA384-AES256GCM</t>
  <t>Value: TBD3 (Assumed: 37)</t>
  <t>Description: Cipher suite for COSE-HPKE version 1 in Base Mode that uses the DHKEM(P-384, HKDF-SHA384) KEM, the HKDF-SHA384 KDF, and the AES-256-GCM AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
  <t>Name: HPKE-v1-Base-P384-SHA384-ChaCha20Poly1305</t>
  <t>Value: TBD4 (Assumed: 38)</t>
  <t>Description: Cipher suite for COSE-HPKE version 1 in Base Mode that uses the DHKEM(P-384, HKDF-SHA384) KEM, the HKDF-SHA384 KDF, and the ChaCha20Poly1305 AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
  <t>Name: HPKE-v1-Base-P521-SHA512-AES256GCM</t>
  <t>Value: TBD5 (Assumed: 39)</t>
  <t>Description: Cipher suite for COSE-HPKE version 1 in Base Mode that uses the DHKEM(P-521, HKDF-SHA512) KEM, the HKDF-SHA512 KDF, and the AES-256-GCM AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
  <t>Name: HPKE-v1-Base-P521-SHA512-ChaCha20Poly1305</t>
  <t>Value: TBD6 (Assumed: 40)</t>
  <t>Description: Cipher suite for COSE-HPKE version 1 in Base Mode that uses the DHKEM(P-521, HKDF-SHA512) KEM, the HKDF-SHA512 KDF, and the ChaCha20Poly1305 AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
  <t>Name: HPKE-v1-Base-X25519-SHA256-AES128GCM</t>
  <t>Value: TBD7 (Assumed: 41)</t>
  <t>Description: Cipher suite for COSE-HPKE version 1 in Base Mode that uses the DHKEM(X25519, HKDF-SHA256) KEM, the HKDF-SHA256 KDF, and the AES-128-GCM AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
  <t>Name: HPKE-v1-Base-X25519-SHA256-ChaCha20Poly1305</t>
  <t>Value: TBD8 (Assumed: 42)</t>
  <t>Description: Cipher suite for COSE-HPKE version 1 in Base Mode that uses the DHKEM(X25519, HKDF-SHA256) KEM, the HKDF-SHA256 KDF, and the ChaCha20Poly1305 AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
  <t>Name: HPKE-v1-Base-X448-SHA512-AES256GCM</t>
  <t>Value: TBD9 (Assumed: 43)</t>
  <t>Description: Cipher suite for COSE-HPKE version 1 in Base Mode that uses the DHKEM(X448, HKDF-SHA512) KEM, the HKDF-SHA512 KDF, and the AES-256-GCM AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
  <t>Name: HPKE-v1-Base-X448-SHA512-ChaCha20Poly1305</t>
  <t>Value: TBD10 (Assumed: 44)</t>
  <t>Description: Cipher suite for COSE-HPKE version 1 in Base Mode that uses the DHKEM(X448, HKDF-SHA512) KEM, the HKDF-SHA512 KDF, and the ChaCha20Poly1305 AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
  <t>Name: HPKE-v1-Base-X25519Kyber768-SHA256-AES256GCM</t>
  <t>Value: TBD11 (Assumed: 250)</t>
  <t>Description: Cipher suite for COSE-HPKE version 1 in Base Mode that uses the X25519Kyber768Draft00 KEM, the HKDF-SHA256 KDF, and the AES-256-GCM AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: No</t>
  <t>Name: HPKE-v1-Base-X25519Kyber768-SHA256-ChaCha20Poly1305</t>
  <t>Value: TBD12 (Assumed: 251)</t>
  <t>Description: Cipher suite for COSE-HPKE version 1 in Base Mode that uses the X25519Kyber768Draft00 KEM, the HKDF-SHA256 KDF, and the ChaCha20Poly1305 AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: No</t>
</list></t>

</section>
<section anchor="cose-header-parameters"><name>COSE Header Parameters</name>

<t><list style="symbols">
  <t>Name: encapsulated_key</t>
  <t>Label: TBDX (Assumed: -4)</t>
  <t>Value type: bstr</t>
  <t>Value Registry: N/A</t>
  <t>Description: HPKE encapsulated key</t>
  <t>Reference: [[This specification]]</t>
</list></t>

</section>
</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>

<reference anchor="RFC9180">
  <front>
    <title>Hybrid Public Key Encryption</title>
    <author fullname="R. Barnes" initials="R." surname="Barnes"/>
    <author fullname="K. Bhargavan" initials="K." surname="Bhargavan"/>
    <author fullname="B. Lipp" initials="B." surname="Lipp"/>
    <author fullname="C. Wood" initials="C." surname="Wood"/>
    <date month="February" year="2022"/>
    <abstract>
      <t>This document describes a scheme for hybrid public key encryption (HPKE). This scheme provides a variant of public key encryption of arbitrary-sized plaintexts for a recipient public key. It also includes three authenticated variants, including one that authenticates possession of a pre-shared key and two optional ones that authenticate possession of a key encapsulation mechanism (KEM) private key. HPKE works for any combination of an asymmetric KEM, key derivation function (KDF), and authenticated encryption with additional data (AEAD) encryption function. Some authenticated variants may not be supported by all KEMs. We provide instantiations of the scheme using widely used and efficient primitives, such as Elliptic Curve Diffie-Hellman (ECDH) key agreement, HMAC-based key derivation function (HKDF), and SHA2.</t>
      <t>This document is a product of the Crypto Forum Research Group (CFRG) in the IRTF.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9180"/>
  <seriesInfo name="DOI" value="10.17487/RFC9180"/>
</reference>

<reference anchor="RFC9052">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="96"/>
  <seriesInfo name="RFC" value="9052"/>
  <seriesInfo name="DOI" value="10.17487/RFC9052"/>
</reference>

<reference anchor="RFC9053">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines a set of algorithms that can be used with the CBOR Object Signing and Encryption (COSE) protocol (RFC 9052).</t>
      <t>This document, along with RFC 9052, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9053"/>
  <seriesInfo name="DOI" value="10.17487/RFC9053"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC8937">
  <front>
    <title>Randomness Improvements for Security Protocols</title>
    <author fullname="C. Cremers" initials="C." surname="Cremers"/>
    <author fullname="L. Garratt" initials="L." surname="Garratt"/>
    <author fullname="S. Smyshlyaev" initials="S." surname="Smyshlyaev"/>
    <author fullname="N. Sullivan" initials="N." surname="Sullivan"/>
    <author fullname="C. Wood" initials="C." surname="Wood"/>
    <date month="October" year="2020"/>
    <abstract>
      <t>Randomness is a crucial ingredient for Transport Layer Security (TLS) and related security protocols. Weak or predictable "cryptographically secure" pseudorandom number generators (CSPRNGs) can be abused or exploited for malicious purposes. An initial entropy source that seeds a CSPRNG might be weak or broken as well, which can also lead to critical and systemic security problems. This document describes a way for security protocol implementations to augment their CSPRNGs using long-term private keys. This improves randomness from broken or otherwise subverted CSPRNGs.</t>
      <t>This document is a product of the Crypto Forum Research Group (CFRG) in the IRTF.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8937"/>
  <seriesInfo name="DOI" value="10.17487/RFC8937"/>
</reference>

<reference anchor="RFC2630">
  <front>
    <title>Cryptographic Message Syntax</title>
    <author fullname="R. Housley" initials="R." surname="Housley"/>
    <date month="June" year="1999"/>
    <abstract>
      <t>This document describes the Cryptographic Message Syntax. This syntax is used to digitally sign, digest, authenticate, or encrypt arbitrary messages. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2630"/>
  <seriesInfo name="DOI" value="10.17487/RFC2630"/>
</reference>




    </references>


<?line 513?>

<section anchor="contributors"><name>Contributors</name>

<t>We would like thank the following individuals for their contributions
to the design of embedding the HPKE output into the COSE structure 
following a long and lively mailing list discussion.</t>

<t><list style="symbols">
  <t>Richard Barnes</t>
  <t>Ilari Liusvaara</t>
</list></t>

<t>Finally, we would like to thank Russ Housley and Brendan Moran for their
contributions to the draft as co-authors of initial versions.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

<t>We would like to thank John Mattsson, Mike Prorock, Michael Richardson,
and Goeran Selander for their review feedback.</t>

</section>


  </back>

<!-- ##markdown-source:
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
Qns962JHAAA=

-->

</rfc>

