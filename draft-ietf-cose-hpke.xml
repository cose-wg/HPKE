<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.29 (Ruby 3.2.3) -->
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="pre5378Trust200902" docName="draft-ietf-cose-hpke-12" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.28.1 -->
  <front>
    <title abbrev="COSE HPKE">Use of Hybrid Public-Key Encryption (HPKE) with CBOR Object Signing and Encryption (COSE)</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-cose-hpke-12"/>
    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization abbrev="H-BRS">University of Applied Sciences Bonn-Rhein-Sieg</organization>
      <address>
        <postal>
          <country>Germany</country>
        </postal>
        <email>hannes.tschofenig@gmx.net</email>
      </address>
    </author>
    <author initials="O." surname="Steele" fullname="Orie Steele" role="editor">
      <organization>Transmute</organization>
      <address>
        <postal>
          <country>United States</country>
        </postal>
        <email>orie@transmute.industries</email>
      </address>
    </author>
    <author initials="D." surname="Ajitomi" fullname="Daisuke Ajitomi">
      <organization>bibital</organization>
      <address>
        <postal>
          <country>Japan</country>
        </postal>
        <email>dajiaji@gmail.com</email>
      </address>
    </author>
    <author initials="L." surname="Lundblade" fullname="Laurence Lundblade">
      <organization>Security Theory LLC</organization>
      <address>
        <postal>
          <country>United States</country>
        </postal>
        <email>lgl@securitytheory.com</email>
      </address>
    </author>
    <date year="2025" month="May" day="27"/>
    <area>Security</area>
    <workgroup>COSE</workgroup>
    <keyword>Internet-Draft</keyword>
    <abstract>
      <?line 69?>

<t>This specification defines hybrid public-key encryption (HPKE) for use with 
CBOR Object Signing and Encryption (COSE). HPKE offers a variant of
public-key encryption of arbitrary-sized plaintexts for a recipient public key.</t>
      <t>HPKE works for any combination of an asymmetric key encapsulation mechanism (KEM),
key derivation function (KDF), and authenticated encryption with
additional data (AEAD) function. Authentication for HPKE in COSE is
provided by COSE-native security mechanisms or by one of the authenticated
variants of HPKE.</t>
      <t>This document defines the use of the HPKE with COSE.</t>
    </abstract>
  </front>
  <middle>
    <?line 83?>

<section anchor="introduction">
      <name>Introduction</name>
      <t>Hybrid public-key encryption (HPKE) <xref target="RFC9180"/> is a scheme that 
provides public key encryption of arbitrary-sized plaintexts given a 
recipient's public key.</t>
      <t>This document defines the use of the HPKE with COSE (<xref target="RFC9052"/>, <xref target="RFC9053"/>).</t>
    </section>
    <section anchor="conventions-and-terminology">
      <name>Conventions and Terminology</name>
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
"SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
when, and only when, they appear in all capitals, as shown here.</t>
      <t>This specification uses the following abbreviations and terms:</t>
      <ul spacing="normal">
        <li>
          <t>Content-encryption key (CEK), a term defined in CMS <xref target="RFC2630"/>.</t>
        </li>
        <li>
          <t>Hybrid Public Key Encryption (HPKE) is defined in <xref target="RFC9180"/>.</t>
        </li>
        <li>
          <t>pkR is the public key of the recipient, as defined in <xref target="RFC9180"/>.</t>
        </li>
        <li>
          <t>skR is the private key of the recipient, as defined in <xref target="RFC9180"/>.</t>
        </li>
        <li>
          <t>Key Encapsulation Mechanism (KEM), see <xref target="RFC9180"/>.</t>
        </li>
        <li>
          <t>Key Derivation Function (KDF), see <xref target="RFC9180"/>.</t>
        </li>
        <li>
          <t>Authenticated Encryption with Associated Data (AEAD), see <xref target="RFC9180"/>.</t>
        </li>
        <li>
          <t>Additional Authenticated Data (AAD), see <xref target="RFC9180"/>.</t>
        </li>
      </ul>
    </section>
    <section anchor="hpke-for-cose">
      <name>HPKE for COSE</name>
      <section anchor="overview">
        <name>Overview</name>
        <t>This specification supports two modes of HPKE in COSE, namely</t>
        <ul spacing="normal">
          <li>
            <t>HPKE Direct Encryption mode, where HPKE is used to encrypt the plaintext. This mode can only be used with a single recipient. <xref target="one-layer"/> provides the details.</t>
          </li>
          <li>
            <t>HPKE Key Encryption mode, where HPKE is used to encrypt a content encryption key (CEK) and the CEK is subsequently used to encrypt the plaintext. This mode supports multiple recipients. <xref target="two-layer"/> 
  provides the details.</t>
          </li>
        </ul>
        <t>In both cases a new COSE header parameter, called 'ek',
is used to convey the content of the enc structure defined in the HPKE
specification. "Enc" represents the serialized public key.</t>
        <t>For use with HPKE the 'ek' header parameter MUST
be present in the unprotected header parameter and MUST contain
the encapsulated key, which is output of the HPKE KEM, and it
is a bstr.</t>
        <t>For all modes, the HPKE info parameter defaults to the empty string; mutually known private information MAY be used instead. The concept of mutually known private information is defined in <xref target="NIST.SP.800-56Ar3"/> as an input to the key derivation function.</t>
        <section anchor="one-layer">
          <name>HPKE Direct Encryption Mode</name>
          <t>This mode applies if the COSE_Encrypt0 structure uses a COSE-HPKE algorithm and has no recipients.</t>
          <t>Because COSE-HPKE supports header protection, if the 'alg' parameter is present, it MUST be included
in the protected header and MUST be a COSE-HPKE algorithm.</t>
          <t>Although the use of the 'kid' parameter in COSE_Encrypt0 is
discouraged by RFC 9052, this documents RECOMMENDS the use of the 'kid' parameter
(or other parameters) to explicitly identify the static recipient public key
used by the sender. If the COSE_Encrypt0 contains the 'kid' then the recipient may
use it to select the appropriate private key.</t>
          <t>When encrypting, the inputs to the HPKE Seal operation are set as follows:</t>
          <ul spacing="normal">
            <li>
              <t>kem_id: Depends on the COSE-HPKE algorithm used.</t>
            </li>
            <li>
              <t>pkR: The recipient public key, converted into an HPKE public key.</t>
            </li>
            <li>
              <t>kdf_id: Depends on the COSE-HPKE algorithm used.</t>
            </li>
            <li>
              <t>aead_id: Depends on the COSE-HPKE algorithm used.</t>
            </li>
            <li>
              <t>info: Defaults to the empty string; mutually known private information MAY be used instead.</t>
            </li>
            <li>
              <t>aad: Canonical encoding of the Enc_structure from <xref target="RFC9052"/>).</t>
            </li>
            <li>
              <t>pt: The raw message plaintext.</t>
            </li>
          </ul>
          <t>The outputs are used as follows:</t>
          <ul spacing="normal">
            <li>
              <t>enc: MUST be placed raw into the 'ek' (encapsulated key) parameter in the unprotected bucket.</t>
            </li>
            <li>
              <t>ct: MUST be used as layer ciphertext. If not using detached content, this is directly placed as
ciphertext in COSE_Encrypt0 structure. Otherwise, it is transported separately and the ciphertext field is nil.
See Section 5 of <xref target="RFC9052"/> for a description of detached payloads.</t>
            </li>
          </ul>
          <t>When decrypting, the inputs to the HPKE Open operation are set as follows:</t>
          <ul spacing="normal">
            <li>
              <t>kem_id: Depends on the COSE-HPKE algorithm used.</t>
            </li>
            <li>
              <t>skR: The recipient private key, converted into an HPKE private key.</t>
            </li>
            <li>
              <t>kdf_id: Depends on the COSE-HPKE algorithm used.</t>
            </li>
            <li>
              <t>aead_id: Depends on the COSE-HPKE algorithm used.</t>
            </li>
            <li>
              <t>info: Defaults to the empty string; mutually known private information MAY be used instead.</t>
            </li>
            <li>
              <t>aad: Canonical encoding of the Enc_structure from <xref target="RFC9052"/>).</t>
            </li>
            <li>
              <t>enc: The contents of the layer 'ek' parameter.</t>
            </li>
            <li>
              <t>ct: The contents of the layer ciphertext.</t>
            </li>
          </ul>
          <t>The plaintext output is the raw message plaintext.</t>
          <t>The COSE_Encrypt0 MAY be tagged or untagged.</t>
          <t>An example is shown in <xref target="one-layer-example"/>.</t>
        </section>
        <section anchor="two-layer">
          <name>HPKE Key Encryption Mode</name>
          <t>This mode is selected if the COSE_recipient structure uses a COSE-HPKE algorithm.</t>
          <t>In this approach the following layers are involved:</t>
          <ul spacing="normal">
            <li>
              <t>Layer 0 (corresponding to the COSE_Encrypt structure) contains the content (plaintext)
encrypted with the CEK. This ciphertext may be detached, and if not detached, then
it is included in the COSE_Encrypt structure.</t>
            </li>
            <li>
              <t>Layer 1 (corresponding to a recipient structure) contains parameters needed for 
HPKE to generate a shared secret used to encrypt the CEK. This layer conveys the 
encrypted CEK in the COSE_recipient structure using a COSE-HPKE algorithm.
The unprotected header MAY contain the kid parameter to identify the static recipient
public key the sender has been using with HPKE.</t>
            </li>
          </ul>
          <t>This two-layer structure is used to encrypt content that can also be shared with
multiple parties at the expense of a single additional encryption operation.
As stated above, the specification uses a CEK to encrypt the content at layer 0.</t>
          <section anchor="recipient-encryption">
            <name>Recipient Encryption</name>
            <t>This section describes the Recipient_structure.
It serves instead of COSE_KDF_Context for COSE-HPKE recipients (and possibly other COSE algorithms defined outside this document).
It MUST be used for COSE-HPKE recipients as it provides the protection for recipient protected headers.
It is patterned after the Enc_structure in <xref target="RFC9052"/>, but is specifically for a COSE_recipient, never a COSE_Encrypt.
The COSE_KDF_Context MUST NOT be used in COSE-HPKE.</t>
            <artwork><![CDATA[
Recipient_structure = [Â 
    context: "Recipient",
    next_layer_alg: int/tstr,
    recipient_protected_header: empty_or_serialize_map,
    recipient_aad: bstr
]
]]></artwork>
            <ul spacing="normal">
              <li>
                <t>"next_layer_alg" is the algorithm ID of the COSE layer for which the COSE_recipient is encrypting a key.
It is the algorithm that the key MUST be used with.
This value MUST match the alg parameter in the next lower COSE layer.
(This serves the same purpose as the alg ID in the COSE_KDF_Context.
It also mitigates attacks where a person-in-the-middle changes the following layer algorithm from an AEAD algorithm to one that is not foiling the protection of the following layer headers).</t>
              </li>
              <li>
                <t>"recipient_protected_header" contains the protected headers from the COSE_recipient CBOR-encoded deterministically with the "Core Deterministic Encoding Requirements", specified in Section 4.2.1 of RFC 8949 <xref target="STD94"/>.</t>
              </li>
              <li>
                <t>"recipient_aad" contains any additional context the application wishes to protect.
If none, it is a zero-length string.
This is distinct from the external_aad for the whole COSE encrypt.
It is per-recipient.
Since it is not a header, it may be secret data that is not transmitted.
It provides a means to convey many of the fields in COSE_KDF_Context.</t>
              </li>
            </ul>
          </section>
          <section anchor="cose-hpke-recipient-construction">
            <name>COSE-HPKE Recipient Construction</name>
            <t>Because COSE-HPKE supports header protection, if the 'alg' parameter is present, it MUST be in the protected header and MUST be a COSE-HPKE algorithm.</t>
            <t>The unprotected header MAY contain the kid parameter to identify the static recipient public key the sender used.
Use of the 'kid' parameter is RECOMMENDED
to explicitly identify the static recipient public key
used by the sender.</t>
            <t>When encrypting, the inputs to the HPKE Seal operation are set as follows:</t>
            <ul spacing="normal">
              <li>
                <t>kem_id: Depends on the COSE-HPKE algorithm used.</t>
              </li>
              <li>
                <t>pkR: The recipient public key, converted into HPKE public key.</t>
              </li>
              <li>
                <t>kdf_id: Depends on the COSE-HPKE algorithm used.</t>
              </li>
              <li>
                <t>aead_id: Depends on the COSE-HPKE algorithm used.</t>
              </li>
              <li>
                <t>info: Defaults to the empty string; mutually known private information MAY be used instead.</t>
              </li>
              <li>
                <t>aad: Canonical encoding of the Recipient_structure.</t>
              </li>
              <li>
                <t>pt: The raw key for the next layer down.</t>
              </li>
            </ul>
            <t>The outputs are used as follows:</t>
            <ul spacing="normal">
              <li>
                <t>enc: MUST be placed raw into the 'ek' (encapsulated key) parameter in the unprotected bucket.</t>
              </li>
              <li>
                <t>ct: MUST be placed raw in the ciphertext field in the COSE_recipient.</t>
              </li>
            </ul>
            <t>When decrypting, the inputs to the HPKE Open operation are set as follows:</t>
            <ul spacing="normal">
              <li>
                <t>kem_id: Depends on the COSE-HPKE algorithm used.</t>
              </li>
              <li>
                <t>skR: The recipient private key, converted into HPKE private key.</t>
              </li>
              <li>
                <t>kdf_id: Depends on the COSE-HPKE algorithm used.</t>
              </li>
              <li>
                <t>aead_id: Depends on the COSE-HPKE algorithm used.</t>
              </li>
              <li>
                <t>info: Defaults to the empty string; mutually known private information MAY be used instead.</t>
              </li>
              <li>
                <t>aad: Canonical encoding of the Recipient_structure.</t>
              </li>
              <li>
                <t>enc: The contents of the layer 'ek' parameter.</t>
              </li>
              <li>
                <t>ct: The contents of the layer ciphertext field.</t>
              </li>
            </ul>
            <t>The plaintext output is the raw key for the next layer down.</t>
            <t>It is not necessary to fill in recipient_aad as HPKE itself covers the attacks that recipient_aad (and COSE_KDF_Context (and SP800-56A)) are used to mitigate.
COSE-HPKE use cases may use it for any purpose they wish, but it should generally be for small identifiers, context or secrets, not to protect bulk external data.
Bulk external data should be protected at layer 0 with external_aad.</t>
            <t>The COSE_recipient structure is repeated for each recipient.</t>
            <t>When encrypting the content at layer 0 then the instructions in
Section 5.3 of <xref target="RFC9052"/> MUST to be followed, which includes the
calculation of the authenticated data strcture.</t>
            <t>An example is shown in <xref target="two-layer-example"/>.</t>
          </section>
        </section>
      </section>
      <section anchor="key-representation">
        <name>Key Representation</name>
        <t>The COSE_Key with the existing key types can be used to represent KEM private
or public keys. When using a COSE_Key for COSE-HPKE, the following checks are made:</t>
        <ul spacing="normal">
          <li>
            <t>If the "kty" field is "AKP", then the public and private keys SHALL be raw HPKE public and private
keys (respectively) for the KEM used by the algorithm.</t>
          </li>
          <li>
            <t>Otherwise, the key MUST be suitable for the KEM used by the algorithm. In case the "kty" parameter
is "EC2" or "OKP", this means the value of "crv" parameter is suitable. For the algorithms defined in
this document, the valid combinations of the KEM, "kty" and "crv" are shown in  <xref target="ciphersuite-kty-crv"/>.</t>
          </li>
          <li>
            <t>If the "key_ops" field is present, it MUST include only "derive bits" for the private key
and MUST be empty for the public key.</t>
          </li>
        </ul>
        <t>Examples of the COSE_Key for COSE-HPKE are shown in <xref target="key-representation-example"/>.</t>
      </section>
    </section>
    <section anchor="ciphersuite-registration">
      <name>Ciphersuite Registration</name>
      <t>A ciphersuite is a group of algorithms, often sharing component algorithms
such as hash functions, targeting a security level.
A COSE-HPKE algorithm is composed of the following choices:</t>
      <ul spacing="normal">
        <li>
          <t>HPKE Mode</t>
        </li>
        <li>
          <t>KEM Algorithm</t>
        </li>
        <li>
          <t>KDF Algorithm</t>
        </li>
        <li>
          <t>AEAD Algorithm</t>
        </li>
      </ul>
      <t>The "KEM", "KDF", and "AEAD" values are chosen from the HPKE IANA
registry <xref target="HPKE-IANA"/>.</t>
      <t>For readability the algorithm ciphersuites labels are built according
to the following scheme:</t>
      <artwork><![CDATA[
HPKE-<Version>-<Mode>-<KEM>-<KDF>-<AEAD>
]]></artwork>
      <t>The "Mode" indicator may be populated with the following values from
Table 1 of <xref target="RFC9180"/>:</t>
      <ul spacing="normal">
        <li>
          <t>"Base" refers to "mode_base" described in Section 5.1.1 of <xref target="RFC9180"/>,
which only enables encryption to the holder of a given KEM private key.</t>
        </li>
        <li>
          <t>"PSK" refers to "mode_psk", described in Section 5.1.2 of <xref target="RFC9180"/>,
which authenticates using a pre-shared key.</t>
        </li>
        <li>
          <t>"Auth" refers to "mode_auth", described in Section 5.1.3 of <xref target="RFC9180"/>,
which authenticates using an asymmetric key.</t>
        </li>
        <li>
          <t>"Auth_Psk" refers to "mode_auth_psk", described in Section 5.1.4 of <xref target="RFC9180"/>,
which authenticates using both a PSK and an asymmetric key.</t>
        </li>
      </ul>
      <t>For a list of ciphersuite registrations, please see <xref target="IANA"/>. The following
table summarizes the relationship between the ciphersuites registered in this
document, which all use the "Base" mode and the values registered in the
HPKE IANA registry <xref target="HPKE-IANA"/>.</t>
      <artwork><![CDATA[
+--------------------------------------------------+------------------+
| COSE-HPKE                                        |      HPKE        |
| Cipher Suite Label                               | KEM | KDF | AEAD |
+--------------------------------------------------+-----+-----+------+
| HPKE-0                                           |0x10 | 0x1 | 0x1  |
| HPKE-1                                           |0x11 | 0x2 | 0x2  |
| HPKE-2                                           |0x12 | 0x3 | 0x2  |
| HPKE-3                                           |0x20 | 0x1 | 0x1  |
| HPKE-4                                           |0x20 | 0x1 | 0x3  |
| HPKE-5                                           |0x21 | 0x3 | 0x2  |
| HPKE-6                                           |0x21 | 0x3 | 0x3  |
+--------------------------------------------------+-----+-----+------+
]]></artwork>
      <t>As the list indicates, the ciphersuite labels have been abbreviated at least
to some extend to maintain the tradeoff between readability and length.</t>
      <t>The ciphersuite list above is a minimal starting point. Additional
ciphersuites can be registered into the already existing registry.
For example, once post-quantum cryptographic algorithms have been standardized
it might be beneficial to register ciphersuites for use with COSE-HPKE.
Additionally, ciphersuites utilizing the compact encoding of the public keys,
as defined in <xref target="I-D.irtf-cfrg-dnhpke"/>, may be standardized for use in
constrained environments.</t>
      <t>As a guideline for ciphersuite submissions to the IANA CoSE algorithm
registry, the designated experts must only register combinations of 
(KEM, KDF, AEAD) triple that consitute valid combinations for use with
HPKE, the KDF used should (if possible) match one internally used by the
KEM, and components should not be mixed between global and national standards.</t>
      <section anchor="cosekeys-for-cose-hpke-ciphersuites">
        <name>COSE_Keys for COSE-HPKE Ciphersuites</name>
        <t>The COSE-HPKE algorithm uniquely determines the KEM for which a COSE_Key is used.
The following mapping table shows the valid combinations
of the KEM used, COSE_Key type and its curve/key subtype.</t>
        <figure anchor="ciphersuite-kty-crv">
          <name>COSE_Key Types and Curves for COSE-HPKE Ciphersuites</name>
          <artwork><![CDATA[
+---------------------+--------------+
| HPKE KEM id         | COSE_Key     |
|                     | kty | crv    |
+---------------------+-----+--------+
| 0x0010, 0x0013      | EC2 | P-256  |
| 0x0011, 0x0014      | EC2 | P-384  |
| 0x0012, 0x0015      | EC2 | P-521  |
| 0x0020              | OKP | X25519 |
| 0x0021              | OKP | X448   |
+---------------------+-----+--------+
]]></artwork>
        </figure>
      </section>
    </section>
    <section anchor="examples">
      <name>Examples</name>
      <t>This section provides a set of examples that shows all COSE message types
(COSE_Encrypt0, COSE_Encrypt and COSE_MAC) to which the COSE-HPKE can be
applied, and also provides some examples of key representation for HPKE KEM.</t>
      <t>Each example of the COSE message includes the following information
that can be used to check the interoperability of COSE-HPKE implementations:</t>
      <ul spacing="normal">
        <li>
          <t>plaintext: Original data of the encrypted payload.</t>
        </li>
        <li>
          <t>external_aad: Externally supplied AAD.</t>
        </li>
        <li>
          <t>skR: A recipient private key.</t>
        </li>
        <li>
          <t>skE: An ephemeral sender private key paired with the encapsulated key.</t>
        </li>
      </ul>
      <section anchor="one-layer-example">
        <name>HPKE Direct Encryption Mode</name>
        <t>This example assumes that a sender wants to communicate an
encrypted payload to a single recipient in the most efficient way.</t>
        <t>An example of the HPKE Direct Encryption Mode is
shown in <xref target="hpke-example-one"/>. Line breaks and comments have been inserted
for better readability.</t>
        <t>This example uses the following:</t>
        <ul spacing="normal">
          <li>
            <t>alg: HPKE-0</t>
          </li>
          <li>
            <t>plaintext: "This is the content."</t>
          </li>
          <li>
            <t>external_aad: "COSE-HPKE app"</t>
          </li>
          <li>
            <t>skR: h'57c92077664146e876760c9520d054aa93c3afb04e306705db6090308507b4d3'</t>
          </li>
          <li>
            <t>skE: h'42dd125eefc409c3b57366e721a40043fb5a58e346d51c133128a77237160218'</t>
          </li>
        </ul>
        <figure anchor="hpke-example-one">
          <name>COSE_Encrypt0 Example for HPKE</name>
          <artwork><![CDATA[
16([
    / alg = HPKE-0 (Assumed: 35) /
    h'a1011823',
    {
        / kid /
        4: h'3031',
        / ek /
        -4: h'045df24272faf43849530db6be01f42708b3c3a9
              df8e268513f0a996ed09ba7840894a3fb946cb28
              23f609c59463093d8815a7400233b75ca8ecb177
              54d241973e',
    },
    / encrypted plaintext /
    h'35aa3d98739289b83751125abe44e3b977e4b9abbf2c8cfaade
      b15f7681eef76df88f096',
])
]]></artwork>
        </figure>
      </section>
      <section anchor="two-layer-example">
        <name>HPKE Key Encryption Mode</name>
        <t>In this example we assume that a sender wants to transmit a
payload to two recipients using the HPKE Key Encryption mode.
Note that it is possible to send two single-layer payloads, 
although it will be less efficient.</t>
        <section anchor="coseencrypt">
          <name>COSE_Encrypt</name>
          <t>An example of the COSE_Encrypt structure using the HPKE scheme is
shown in <xref target="hpke-example-cose-encrypt"/>. Line breaks and comments have been
inserted for better readability.</t>
          <t>This example uses the following:</t>
          <t>TODO: recompute this for Recipient_structure</t>
          <ul spacing="normal">
            <li>
              <t>Encryption alg: AES-128-GCM</t>
            </li>
            <li>
              <t>plaintext: "This is the content."</t>
            </li>
            <li>
              <t>detatched ciphertext: h'cc168c4e148c52a83010a75250935a47ccb8682deebcef8fce5d60c161e849f53a2dc664'</t>
            </li>
            <li>
              <t>kid:"01"
              </t>
              <ul spacing="normal">
                <li>
                  <t>alg: HPKE-0</t>
                </li>
                <li>
                  <t>external_aad: "COSE-HPKE app"</t>
                </li>
                <li>
                  <t>skR: h'57c92077664146e876760c9520d054aa93c3afb04e306705db6090308507b4d3'</t>
                </li>
                <li>
                  <t>skE: h'97ad883f949f4cdcb1301b9446950efd4eb519e16c4a3d78304eec832692f9f6'</t>
                </li>
              </ul>
            </li>
            <li>
              <t>kid:"02"
              </t>
              <ul spacing="normal">
                <li>
                  <t>alg: HPKE-4</t>
                </li>
                <li>
                  <t>external_aad: "COSE-HPKE app"</t>
                </li>
                <li>
                  <t>skR: h'bec275a17e4d362d0819dc0695d89a73be6bf94b66ab726ae0b1afe3c43f41ce'</t>
                </li>
                <li>
                  <t>skE: h'b8ed3f4df56c230e36fa6620a47f24d08856d242ea547c5521ff7bd69af8fd6f'</t>
                </li>
              </ul>
            </li>
          </ul>
          <figure anchor="hpke-example-cose-encrypt">
            <name>COSE_Encrypt Example for HPKE</name>
            <artwork><![CDATA[
96_0([
    / alg = AES-128-GCM (1) /
    h'a10101',
    {
        / iv /
        5: h'b3fb95dde18c6f90a9f0ae55',
    },
    / detached ciphertext /
    null,
    [
        [
            / alg = HPKE-0 (Assumed: 35) /
            h'a1011823',
            {
                / kid /
                4: h'3031',
                / ek /
                -4: h'04d97b79486fe2e7b98fb1bd43
                      c4faee316ff38d28609a1cf568
                      40a809298a91e601f1cc0c2ba4
                      6cb67b41f4651b769cafd9df78
                      e58aa7f5771291bd4f0f420ba6',
            },
            / ciphertext containing encrypted CEK /
            h'24450f54ae93375351467d17aa7a795cfede2
              c03eced1ad21fcb7e7c2fe64397',
        ],
        [
            / alg = HPKE-4 (Assumed: 42) /
            h'a101182a',
            {
                / kid /
                4: h'3032',
                / ek /
                -4: h'd1afbdc95b0e735676f6bca34f
                      be50f2822259ac09bfc3c500f1
                      4a05de9b2833',
            },
            / ciphertext containing encrypted CEK /
            h'079b443ec6dfcda6a5f8748aff3875146a8ed
              40359e1279b545166385d8d9b59',
        ],
    ],
])
]]></artwork>
          </figure>
          <t>To offer authentication of the sender the payload in <xref target="hpke-example-cose-encrypt"/>
is signed with a COSE_Sign1 wrapper, which is outlined in <xref target="hpke-example-sign"/>.
The payload in <xref target="hpke-example-sign"/> is meant to contain the content of
<xref target="hpke-example-cose-encrypt"/>.</t>
          <figure anchor="hpke-example-sign">
            <name>COSE_Encrypt Example for HPKE</name>
            <artwork><![CDATA[
18(
  [
    / protected / h'a10126' / {
            \ alg \ 1:-7 \ ECDSA 256 \
          } / ,
    / unprotected / {
          / kid / 4:'sender@example.com'
        },
    / payload /     h'AA19...B80C',
    / signature /   h'E3B8...25B8'
  ]
)
]]></artwork>
          </figure>
        </section>
        <section anchor="cosemac">
          <name>COSE_MAC</name>
          <t>An example of the COSE_MAC structure using the HPKE scheme is
shown in <xref target="hpke-example-cose-mac"/>.</t>
          <t>This example uses the following:</t>
          <ul spacing="normal">
            <li>
              <t>MAC alg: HMAC 256/256</t>
            </li>
            <li>
              <t>payload: "This is the content."</t>
            </li>
            <li>
              <t>kid:"01"
              </t>
              <ul spacing="normal">
                <li>
                  <t>alg: HPKE-0</t>
                </li>
                <li>
                  <t>external_aad: "COSE-HPKE app"</t>
                </li>
                <li>
                  <t>skR: h'57c92077664146e876760c9520d054aa93c3afb04e306705db6090308507b4d3'</t>
                </li>
                <li>
                  <t>skE: h'e5dd9472b5807636c95be0ba2575020ba91cbb3561b52be141da89678c664307'</t>
                </li>
              </ul>
            </li>
            <li>
              <t>kid:"02"
              </t>
              <ul spacing="normal">
                <li>
                  <t>alg: HPKE-4</t>
                </li>
                <li>
                  <t>external_aad: "COSE-HPKE app"</t>
                </li>
                <li>
                  <t>skR: h'bec275a17e4d362d0819dc0695d89a73be6bf94b66ab726ae0b1afe3c43f41ce'</t>
                </li>
                <li>
                  <t>skE: h'78a49d7af71b5244498e943f361aa0250184afc48b8098a68ae97ccd2cd7e56f'</t>
                </li>
              </ul>
            </li>
          </ul>
          <figure anchor="hpke-example-cose-mac">
            <name>COSE_MAC Example for HPKE</name>
            <artwork><![CDATA[
97_0([
    / alg = HMAC 256/256 (5) /
    h'a10105',
    {},
    / payload = 'This is the content.' /
    h'546869732069732074686520636f6e74656e742e',
    / tag /
    h'5cdcf6055fcbdb53b4001d8fb88b2a46b200ed28e1e
          d77e16ddf43fb3cac3a98',
    [
        [
            / alg = HPKE-0 (Assumed: 35) /
            h'a1011823',
            {
                / kid = '01' /
                4: h'3031',
                / ek /
                -4: h'043ac21632e45e1fbd733f002a
                      621aa4f3d94737adc395d5a7cb
                      6e9554bd1ad273aec991493786
                      d72616d9759bf8526e6e20c1ed
                      c41ba5739f2b2e441781aa0eb4',
            },
            / ciphertext containing encrypted MAC key /
            h'5cee2b4235a7ff695164f7a8d1e79ccf3ca3d
              e8b22f3592626020a95b2a8d3fb4d7aa7fe37
              432426ee70073a368f29d1',
        ],
        [
            / alg = HPKE-4 (Assumed: 42) /
            h'a101182a',
            {
                / kid = '02' /
                4: h'3032',
                / ek /
                -4: h'02cffacc60def3bb3d0a1c3661
                      227c9de8dc2b1d3939dd2c07d4
                      49ebb0bba324',
            },
            / ciphertext containing encrypted MAC key /
            h'3f5b8b60271d5234dbea554dc1461d0239e9f
              4589f6415e8563b061dbcb37795a616111b78
              2b4c589b534309327ffadc',
        ],
    ],
])
]]></artwork>
          </figure>
        </section>
      </section>
      <section anchor="key-representation-example">
        <name>Key Representation</name>
        <t>Examples of private and public KEM key representation are shown below.</t>
        <section anchor="kem-public-key-for-hpke-0">
          <name>KEM Public Key for HPKE-0</name>
          <figure anchor="hpke-example-key-1">
            <name>Key Representation Example for HPKE-0</name>
            <artwork><![CDATA[
{
    / kty = 'EC2' /
    1: 2,
    / kid = '01' /
    2: h'3031',
    / alg = HPKE-0 (Assumed: 35) /
    3: 35,
    / crv = 'P-256' /
    -1: 1,
    / x /
    -2: h'65eda5a12577c2bae829437fe338701a10aaa375
              e1bb5b5de108de439c08551d',
    / y /
    -3: h'1e52ed75701163f7f9e40ddf9f341b3dc9ba860af
              7e0ca7ca7e9eecd0084d19c'
}
]]></artwork>
          </figure>
        </section>
        <section anchor="kem-private-key-for-hpke-0">
          <name>KEM Private Key for HPKE-0</name>
          <figure anchor="hpke-example-key-2">
            <name>Key Representation Example for HPKE-0</name>
            <artwork><![CDATA[
{
    / kty = 'EC2' /
    1: 2,
    / kid = '01' /
    2: h'3031',
    / alg = HPKE-0 (Assumed: 35) /
    3: 35,
    / key_ops = ['derive_bits'] /
    4: [8],
    / crv = 'P-256' /
    -1: 1,
    / x /
    -2: h'bac5b11cad8f99f9c72b05cf4b9e26d244dc189f7
              45228255a219a86d6a09eff',
    / y /
    -3: h'20138bf82dc1b6d562be0fa54ab7804a3a64b6d72
              ccfed6b6fb6ed28bbfc117e',
    / d /
    -4: h'57c92077664146e876760c9520d054aa93c3afb04
              e306705db6090308507b4d3',
}
]]></artwork>
          </figure>
        </section>
        <section anchor="kem-public-key-for-hpke-4">
          <name>KEM Public Key for HPKE-4</name>
          <figure anchor="hpke-example-key-3">
            <name>Key Representation Example for HPKE-4</name>
            <artwork><![CDATA[
{
    / kty = 'OKP' /
    1: 1,
    / kid = '11' /
    2: h'3131',
    / alg = HPKE-4 (Assumed: 42) /
    3: 42,
    / crv = 'X25519' /
    -1: 4,
    / x /
    -2: h'cb7c09ab7b973c77a808ee05b9bbd373b55c06eaa
              9bd4ad2bd4e9931b1c34c22',
}
]]></artwork>
          </figure>
        </section>
      </section>
    </section>
    <section anchor="sec-cons">
      <name>Security Considerations</name>
      <t>This specification is based on HPKE and the security considerations of
<xref target="RFC9180"/> are therefore applicable also to this specification.</t>
      <t>HPKE assumes the sender is in possession of the public key of the recipient and
HPKE COSE makes the same assumptions. Hence, some form of public key distribution
mechanism is assumed to exist but outside the scope of this document.</t>
      <t>HPKE relies on a source of randomness to be available on the device. Additionally, 
with the two layer structure the CEK is randomly generated and it MUST be
ensured that the guidelines in <xref target="RFC8937"/> for random number generations are followed.</t>
      <t>HPKE in Base mode does not offer authentication as part of the HPKE KEM. In this
case COSE constructs like COSE_Sign, COSE_Sign1, COSE_MAC, or COSE_MAC0 can be
used to add authentication. HPKE also offers modes that offer authentication.</t>
      <t>If COSE_Encrypt or COSE_Encrypt0 is used with a detached ciphertext then the
subsequently applied integrity protection via COSE_Sign, COSE_Sign1, COSE_MAC, 
or COSE_MAC0 does not cover this detached ciphertext. Implementers MUST ensure
that the detached ciphertext also experiences integrity protection. This is, for
example, the case when an AEAD cipher is used to produce the detached ciphertext
but may not be guaranteed by non-AEAD ciphers.</t>
    </section>
    <section anchor="IANA">
      <name>IANA Considerations</name>
      <t>This document requests IANA to add new values to the 'COSE Algorithms' and to 
the 'COSE Header Parameters' registries.</t>
      <section anchor="cose-algorithms-registry">
        <name>COSE Algorithms Registry</name>
        <ul spacing="normal">
          <li>
            <t>Name: HPKE-0</t>
          </li>
          <li>
            <t>Value: TBD1 (Assumed: 35)</t>
          </li>
          <li>
            <t>Description: Cipher suite for COSE-HPKE in Base Mode that uses the DHKEM(P-256, HKDF-SHA256) KEM, the HKDF-SHA256 KDF and the AES-128-GCM AEAD.</t>
          </li>
          <li>
            <t>Capabilities: [kty]</t>
          </li>
          <li>
            <t>Change Controller: IESG</t>
          </li>
          <li>
            <t>Reference:  [[TBD: This RFC]]</t>
          </li>
          <li>
            <t>Recommended: Yes</t>
          </li>
          <li>
            <t>Name: HPKE-1</t>
          </li>
          <li>
            <t>Value: TBD3 (Assumed: 37)</t>
          </li>
          <li>
            <t>Description: Cipher suite for COSE-HPKE in Base Mode that uses the DHKEM(P-384, HKDF-SHA384) KEM, the HKDF-SHA384 KDF, and the AES-256-GCM AEAD.</t>
          </li>
          <li>
            <t>Capabilities: [kty]</t>
          </li>
          <li>
            <t>Change Controller: IESG</t>
          </li>
          <li>
            <t>Reference:  [[TBD: This RFC]]</t>
          </li>
          <li>
            <t>Recommended: Yes</t>
          </li>
          <li>
            <t>Name: HPKE-2</t>
          </li>
          <li>
            <t>Value: TBD5 (Assumed: 39)</t>
          </li>
          <li>
            <t>Description: Cipher suite for COSE-HPKE in Base Mode that uses the DHKEM(P-521, HKDF-SHA512) KEM, the HKDF-SHA512 KDF, and the AES-256-GCM AEAD.</t>
          </li>
          <li>
            <t>Capabilities: [kty]</t>
          </li>
          <li>
            <t>Change Controller: IESG</t>
          </li>
          <li>
            <t>Reference:  [[TBD: This RFC]]</t>
          </li>
          <li>
            <t>Recommended: Yes</t>
          </li>
          <li>
            <t>Name: HPKE-3</t>
          </li>
          <li>
            <t>Value: TBD7 (Assumed: 41)</t>
          </li>
          <li>
            <t>Description: Cipher suite for COSE-HPKE in Base Mode that uses the DHKEM(X25519, HKDF-SHA256) KEM, the HKDF-SHA256 KDF, and the AES-128-GCM AEAD.</t>
          </li>
          <li>
            <t>Capabilities: [kty]</t>
          </li>
          <li>
            <t>Change Controller: IESG</t>
          </li>
          <li>
            <t>Reference:  [[TBD: This RFC]]</t>
          </li>
          <li>
            <t>Recommended: Yes</t>
          </li>
          <li>
            <t>Name: HPKE-4</t>
          </li>
          <li>
            <t>Value: TBD8 (Assumed: 42)</t>
          </li>
          <li>
            <t>Description: Cipher suite for COSE-HPKE in Base Mode that uses the DHKEM(X25519, HKDF-SHA256) KEM, the HKDF-SHA256 KDF, and the ChaCha20Poly1305 AEAD.</t>
          </li>
          <li>
            <t>Capabilities: [kty]</t>
          </li>
          <li>
            <t>Change Controller: IESG</t>
          </li>
          <li>
            <t>Reference:  [[TBD: This RFC]]</t>
          </li>
          <li>
            <t>Recommended: Yes</t>
          </li>
          <li>
            <t>Name: HPKE-5</t>
          </li>
          <li>
            <t>Value: TBD9 (Assumed: 43)</t>
          </li>
          <li>
            <t>Description: Cipher suite for COSE-HPKE in Base Mode that uses the DHKEM(X448, HKDF-SHA512) KEM, the HKDF-SHA512 KDF, and the AES-256-GCM AEAD.</t>
          </li>
          <li>
            <t>Capabilities: [kty]</t>
          </li>
          <li>
            <t>Change Controller: IESG</t>
          </li>
          <li>
            <t>Reference:  [[TBD: This RFC]]</t>
          </li>
          <li>
            <t>Recommended: Yes</t>
          </li>
          <li>
            <t>Name: HPKE-6</t>
          </li>
          <li>
            <t>Value: TBD10 (Assumed: 44)</t>
          </li>
          <li>
            <t>Description: Cipher suite for COSE-HPKE in Base Mode that uses the DHKEM(X448, HKDF-SHA512) KEM, the HKDF-SHA512 KDF, and the ChaCha20Poly1305 AEAD.</t>
          </li>
          <li>
            <t>Capabilities: [kty]</t>
          </li>
          <li>
            <t>Change Controller: IESG</t>
          </li>
          <li>
            <t>Reference:  [[TBD: This RFC]]</t>
          </li>
          <li>
            <t>Recommended: Yes</t>
          </li>
        </ul>
      </section>
      <section anchor="cose-header-parameters">
        <name>COSE Header Parameters</name>
        <ul spacing="normal">
          <li>
            <t>Name: ek</t>
          </li>
          <li>
            <t>Label: TBDX (Assumed: -4)</t>
          </li>
          <li>
            <t>Value type: bstr</t>
          </li>
          <li>
            <t>Value Registry: N/A</t>
          </li>
          <li>
            <t>Description: HPKE encapsulated key</t>
          </li>
          <li>
            <t>Reference: [[This specification]]</t>
          </li>
        </ul>
      </section>
    </section>
  </middle>
  <back>
    <references anchor="sec-combined-references">
      <name>References</name>
      <references anchor="sec-normative-references">
        <name>Normative References</name>
        <reference anchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner"/>
            <date month="March" year="1997"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author fullname="B. Leiba" initials="B." surname="Leiba"/>
            <date month="May" year="2017"/>
            <abstract>
              <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC9180">
          <front>
            <title>Hybrid Public Key Encryption</title>
            <author fullname="R. Barnes" initials="R." surname="Barnes"/>
            <author fullname="K. Bhargavan" initials="K." surname="Bhargavan"/>
            <author fullname="B. Lipp" initials="B." surname="Lipp"/>
            <author fullname="C. Wood" initials="C." surname="Wood"/>
            <date month="February" year="2022"/>
            <abstract>
              <t>This document describes a scheme for hybrid public key encryption (HPKE). This scheme provides a variant of public key encryption of arbitrary-sized plaintexts for a recipient public key. It also includes three authenticated variants, including one that authenticates possession of a pre-shared key and two optional ones that authenticate possession of a key encapsulation mechanism (KEM) private key. HPKE works for any combination of an asymmetric KEM, key derivation function (KDF), and authenticated encryption with additional data (AEAD) encryption function. Some authenticated variants may not be supported by all KEMs. We provide instantiations of the scheme using widely used and efficient primitives, such as Elliptic Curve Diffie-Hellman (ECDH) key agreement, HMAC-based key derivation function (HKDF), and SHA2.</t>
              <t>This document is a product of the Crypto Forum Research Group (CFRG) in the IRTF.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9180"/>
          <seriesInfo name="DOI" value="10.17487/RFC9180"/>
        </reference>
        <reference anchor="RFC9052">
          <front>
            <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <date month="August" year="2022"/>
            <abstract>
              <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
              <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="96"/>
          <seriesInfo name="RFC" value="9052"/>
          <seriesInfo name="DOI" value="10.17487/RFC9052"/>
        </reference>
        <reference anchor="RFC9053">
          <front>
            <title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <date month="August" year="2022"/>
            <abstract>
              <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines a set of algorithms that can be used with the CBOR Object Signing and Encryption (COSE) protocol (RFC 9052).</t>
              <t>This document, along with RFC 9052, obsoletes RFC 8152.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9053"/>
          <seriesInfo name="DOI" value="10.17487/RFC9053"/>
        </reference>
        <referencegroup anchor="STD94" target="https://www.rfc-editor.org/info/std94">
          <reference anchor="RFC8949" target="https://www.rfc-editor.org/info/rfc8949">
            <front>
              <title>Concise Binary Object Representation (CBOR)</title>
              <author fullname="C. Bormann" initials="C." surname="Bormann"/>
              <author fullname="P. Hoffman" initials="P." surname="Hoffman"/>
              <date month="December" year="2020"/>
              <abstract>
                <t>The Concise Binary Object Representation (CBOR) is a data format whose design goals include the possibility of extremely small code size, fairly small message size, and extensibility without the need for version negotiation. These design goals make it different from earlier binary serializations such as ASN.1 and MessagePack.</t>
                <t>This document obsoletes RFC 7049, providing editorial improvements, new details, and errata fixes while keeping full compatibility with the interchange format of RFC 7049. It does not create a new version of the format.</t>
              </abstract>
            </front>
            <seriesInfo name="STD" value="94"/>
            <seriesInfo name="RFC" value="8949"/>
            <seriesInfo name="DOI" value="10.17487/RFC8949"/>
          </reference>
        </referencegroup>
      </references>
      <references anchor="sec-informative-references">
        <name>Informative References</name>
        <reference anchor="RFC8937">
          <front>
            <title>Randomness Improvements for Security Protocols</title>
            <author fullname="C. Cremers" initials="C." surname="Cremers"/>
            <author fullname="L. Garratt" initials="L." surname="Garratt"/>
            <author fullname="S. Smyshlyaev" initials="S." surname="Smyshlyaev"/>
            <author fullname="N. Sullivan" initials="N." surname="Sullivan"/>
            <author fullname="C. Wood" initials="C." surname="Wood"/>
            <date month="October" year="2020"/>
            <abstract>
              <t>Randomness is a crucial ingredient for Transport Layer Security (TLS) and related security protocols. Weak or predictable "cryptographically secure" pseudorandom number generators (CSPRNGs) can be abused or exploited for malicious purposes. An initial entropy source that seeds a CSPRNG might be weak or broken as well, which can also lead to critical and systemic security problems. This document describes a way for security protocol implementations to augment their CSPRNGs using long-term private keys. This improves randomness from broken or otherwise subverted CSPRNGs.</t>
              <t>This document is a product of the Crypto Forum Research Group (CFRG) in the IRTF.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8937"/>
          <seriesInfo name="DOI" value="10.17487/RFC8937"/>
        </reference>
        <reference anchor="RFC2630">
          <front>
            <title>Cryptographic Message Syntax</title>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <date month="June" year="1999"/>
            <abstract>
              <t>This document describes the Cryptographic Message Syntax. This syntax is used to digitally sign, digest, authenticate, or encrypt arbitrary messages. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2630"/>
          <seriesInfo name="DOI" value="10.17487/RFC2630"/>
        </reference>
        <reference anchor="I-D.irtf-cfrg-dnhpke">
          <front>
            <title>Deterministic Nonce-less Hybrid Public Key Encryption</title>
            <author fullname="Dan Harkins" initials="D." surname="Harkins">
              <organization>Hewlett-Packard Enterprise</organization>
            </author>
            <date day="3" month="March" year="2025"/>
            <abstract>
              <t>   This document describes enhancements to the Hybrid Public Key
   Encryption standard published by CFRG.  These include use of "compact
   representation" of relevant public keys, support for key-wrapping,
   and two ways to address the use of HPKE on lossy networks: a
   determinstic, nonce-less AEAD scheme, and use of a rolling sequence
   number with existing AEAD schemes.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-irtf-cfrg-dnhpke-06"/>
        </reference>
        <reference anchor="HPKE-IANA" target="https://www.iana.org/assignments/hpke/hpke.xhtml">
          <front>
            <title>Hybrid Public Key Encryption (HPKE) IANA Registry</title>
            <author>
              <organization>IANA</organization>
            </author>
            <date year="2023" month="October"/>
          </front>
        </reference>
        <reference anchor="NIST.SP.800-56Ar3" target="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-56Ar3.pdf">
          <front>
            <title>Recommendation for Pair-Wise Key-Establishment Schemes Using Discrete Logarithm Cryptography, NIST Special Publication 800-56A Revision 3</title>
            <author>
              <organization>National Institute of Standards and Technology</organization>
            </author>
            <date year="2018" month="April"/>
          </front>
        </reference>
      </references>
    </references>
    <?line 782?>

<section anchor="contributors">
      <name>Contributors</name>
      <t>We would like thank the following individuals for their contributions
to the design of embedding the HPKE output into the COSE structure 
following a long and lively mailing list discussion:</t>
      <ul spacing="normal">
        <li>
          <t>Richard Barnes</t>
        </li>
        <li>
          <t>Ilari Liusvaara</t>
        </li>
      </ul>
      <t>Finally, we would like to thank Russ Housley and Brendan Moran for their
contributions to the draft as co-authors of initial versions.</t>
    </section>
    <section anchor="acknowledgements">
      <name>Acknowledgements</name>
      <t>We would like to thank
Michael B. Jones,
John Mattsson,
Mike Prorock,
Michael Richardson,
and
Goeran Selander
for their review feedback.</t>
    </section>
  </back>
  <!-- ##markdown-source:
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

-->

</rfc>
