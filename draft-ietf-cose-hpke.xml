<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.1 (Ruby 3.0.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="pre5378Trust200902" docName="draft-ietf-cose-hpke-06" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="COSE HPKE">Use of Hybrid Public-Key Encryption (HPKE) with CBOR Object Signing and Encryption (COSE)</title>

    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization></organization>
      <address>
        <postal>
          <country>Austria</country>
        </postal>
        <email>hannes.tschofenig@gmx.net</email>
      </address>
    </author>
    <author initials="O." surname="Steele" fullname="Orie Steele" role="editor">
      <organization>Transmute</organization>
      <address>
        <postal>
          <country>United States</country>
        </postal>
        <email>orie@transmute.industries</email>
      </address>
    </author>
    <author initials="D." surname="Ajitomi" fullname="Daisuke Ajitomi">
      <organization></organization>
      <address>
        <postal>
          <country>Japan</country>
        </postal>
        <email>dajiaji@gmail.com</email>
      </address>
    </author>
    <author initials="L." surname="Lundblade" fullname="Laurence Lundblade">
      <organization>Security Theory LLC</organization>
      <address>
        <postal>
          <country>United States</country>
        </postal>
        <email>lgl@securitytheory.com</email>
      </address>
    </author>

    <date year="2023" month="October" day="02"/>

    <area>Security</area>
    <workgroup>COSE</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 53?>

<t>This specification defines hybrid public-key encryption (HPKE) for use with 
CBOR Object Signing and Encryption (COSE). HPKE offers a variant of
public-key encryption of arbitrary-sized plaintexts for a recipient public key.</t>

<t>HPKE works for any combination of an asymmetric key encapsulation mechanism (KEM),
key derivation function (KDF), and authenticated encryption with
additional data (AEAD) function. Authentication for HPKE in COSE is
provided by COSE-native security mechanisms.</t>

<t>This document defines the use of the HPKE with COSE.</t>



    </abstract>



  </front>

  <middle>


<?line 66?>

<section anchor="introduction"><name>Introduction</name>

<t>Hybrid public-key encryption (HPKE) <xref target="RFC9180"/> is a scheme that 
provides public key encryption of arbitrary-sized plaintexts given a 
recipient's public key. HPKE utilizes a non-interactive ephemeral-static 
Diffie-Hellman exchange to establish a shared secret. The motivation for
standardizing a public key encryption scheme is explained in the introduction
of <xref target="RFC9180"/>.</t>

<t>The HPKE specification defines several features for use with public key encryption
and a subset of those features is applied to COSE (<xref target="RFC9052"/>, <xref target="RFC9053"/>). Since COSE provides
constructs for authentication, those are not re-used from the HPKE specification.
This specification uses the "base" mode, as it is called in HPKE specification
language.</t>

</section>
<section anchor="conventions-and-terminology"><name>Conventions and Terminology</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
"SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
when, and only when, they appear in all capitals, as shown here.</t>

<t>This specification uses the following abbreviations and terms:</t>

<t><list style="symbols">
  <t>Content-encryption key (CEK), a term defined in CMS <xref target="RFC2630"/>.</t>
  <t>Hybrid Public Key Encryption (HPKE) is defined in <xref target="RFC9180"/>.</t>
  <t>pkR is the public key of the recipient, as defined in <xref target="RFC9180"/>.</t>
  <t>skR is the private key of the recipient, as defined in <xref target="RFC9180"/>.</t>
  <t>Key Encapsulation Mechanism (KEM), see <xref target="RFC9180"/>.</t>
  <t>Key Derivation Function (KDF), see <xref target="RFC9180"/>.</t>
  <t>Authenticated Encryption with Associated Data (AEAD), see <xref target="RFC9180"/>.</t>
  <t>Additional Authenticated Data (AAD), see <xref target="RFC9180"/>.</t>
</list></t>

</section>
<section anchor="hpke-for-cose"><name>HPKE for COSE</name>

<section anchor="overview"><name>Overview</name>

<t>This specification supports two uses of HPKE in COSE, namely</t>

<t><list style="symbols">
  <t>HPKE in a single recipient setup.
This use case utilizes a one layer COSE structure. 
<xref target="one-layer"/> provides the details.</t>
  <t>HPKE in a multiple recipient setup. 
This use case requires a two layer COSE structure.  <xref target="two-layer"/> 
provides the details. While it is possible to support the single 
recipient use case with a two layer structure, the single 
layer setup is more efficient.</t>
</list></t>

<t>In both cases a new COSE header parameter, called 'encapsulated_key',
is used to convey the content of the enc structure defined in the HPKE
specification. "Enc" represents the serialized public key.</t>

<t>When the alg value is set to any of algorithms registered by this
specification then the 'encapsulated_key' header parameter MUST
be present in the unprotected header parameter.</t>

<t>The 'encapsulated_key' parameter contains the encapsulated key, which is
output of the HPKE KEM, and is a bstr.</t>

<section anchor="one-layer"><name>Single Recipient / One Layer Structure</name>

<t>With the one layer structure the information carried inside the 
COSE_recipient structure is embedded inside the COSE_Encrypt0.</t>

<t>HPKE is used to directly encrypt the plaintext. The resulting ciphertext
MAY be included in the COSE_Encrypt0 or MAY be detached. If a payload is
transported separately then it is called "detached content". A nil CBOR
object is placed in the location of the ciphertext. See Section 5
of <xref target="RFC9052"/> for a description of detached payloads.</t>

<t>The sender MUST set the alg parameter in the protected header, which
indicates the use of HPKE.</t>

<t>The sender MUST place the 'encapsulated_key' parameter into the unprotected
header. Although the use of the kid parameter in COSE_Encrypt0 is
discouraged by RFC 9052, this specification allows profiles of this
specification to use the kid parameter (or other parameters) to
identify the static recipient public key used by the sender. If the
COSE_Encrypt0 contains the kid then the recipient may use it to
select the appropriate private key.</t>

<t><xref target="cddl-hpke-one-layer"/> shows the COSE_Encrypt0 CDDL structure.</t>

<figure title="CDDL for HPKE-based COSE_Encrypt0 Structure" anchor="cddl-hpke-one-layer"><artwork><![CDATA[
COSE_Encrypt0_Tagged = #6.16(COSE_Encrypt0)

; Layer 0
COSE_Encrypt0 = [
    Headers,
    ciphertext : bstr / nil,
]
]]></artwork></figure>

<t>The COSE_Encrypt0 MAY be tagged or untagged.</t>

<t>An example is shown in <xref target="one-layer-example"/>.</t>

</section>
<section anchor="two-layer"><name>Multiple Recipients / Two Layer Structure</name>

<t>With the two layer structure the HPKE information is conveyed in the COSE_recipient 
structure, i.e. one COSE_recipient structure per recipient.</t>

<t>In this approach the following layers are involved:</t>

<t><list style="symbols">
  <t>Layer 0 (corresponding to the COSE_Encrypt structure) contains the content (plaintext)
encrypted with the CEK. This ciphertext MAY be detached. If not detached, then
it is included in the COSE_Encrypt structure.</t>
  <t>Layer 1 (corresponding to a recipient structure) contains parameters needed for 
HPKE to generate a shared secret used to encrypt the CEK. This layer conveys the 
encrypted CEK in the encCEK structure. The protected header MUST contain the HPKE 
alg parameter and the unprotected header MUST contain the 'encapsulated_key' parameter.
The unprotected header MAY contain the kid parameter to identify the static recipient
public key the sender has been using with HPKE.</t>
</list></t>

<t>This two-layer structure is used to encrypt content that can also be shared with
multiple parties at the expense of a single additional encryption operation.
As stated above, the specification uses a CEK to encrypt the content at layer 0.</t>

<t>The COSE_recipient structure, shown in <xref target="cddl-hpke"/>, is repeated for each
recipient.</t>

<figure title="CDDL for HPKE-based COSE_Encrypt Structure" anchor="cddl-hpke"><artwork><![CDATA[
COSE_Encrypt_Tagged = #6.96(COSE_Encrypt)
 
/ Layer 0 /
COSE_Encrypt = [
  Headers,
  ciphertext : bstr / nil,
  recipients : + COSE_recipient
]

/ Layer 1 /
COSE_recipient = [
  protected   : bstr .cbor header_map,
  unprotected : header_map,
  encCEK      : bstr,
]

header_map = {
  Generic_Headers,
  * label => values,
}
]]></artwork></figure>

<t>The COSE_Encrypt MAY be tagged or untagged.</t>

<t>An example is shown in <xref target="two-layer-example"/>.</t>

</section>
</section>
</section>
<section anchor="examples"><name>Examples</name>

<section anchor="one-layer-example"><name>Single Recipient / One Layer Example</name>

<t>This example assumes that a sender wants to communicate an
encrypted payload to a single recipient in the most efficient way.</t>

<t>An example of the COSE_Encrypt0 structure using the HPKE scheme is
shown in <xref target="hpke-example-one"/>. Line breaks and comments have been inserted
for better readability.</t>

<t>This example uses HPKE-v1-Base-P256-SHA256-AES128GCM as the algorithm,
which correspond to the following HPKE algorithm combination:</t>

<t><list style="symbols">
  <t>KEM: DHKEM(P-256, HKDF-SHA256)</t>
  <t>KDF: HKDF-SHA256</t>
  <t>AEAD: AES-128-GCM</t>
  <t>Mode: Base</t>
  <t>payload: "This is the content"</t>
  <t>aad: ""</t>
</list></t>

<figure title="COSE_Encrypt0 Example for HPKE" anchor="hpke-example-one"><artwork><![CDATA[
16([
    / alg = HPKE-v1-Base-P256-SHA256-AES128GCM /
    h'a1011823',
    {
        / kid /
        4: h'3031',
        / encapsulated_key /
        -4: h'048c6f75e463a773082f3cb0d3a701348a578c67
              80aba658646682a9af7291dfc277ec93c3d58707
              818286c1097825457338dc3dcaff367e2951342e
              9db30dc0e7',
    },
    / encrypted plaintext /
    h'ee22206308e478c279b94bb071f3a5fbbac412a6effe34195f7
      c4169d7d8e81666d8be13',
])
]]></artwork></figure>

</section>
<section anchor="two-layer-example"><name>Multiple Recipients / Two Layer</name>

<t>In this example we assume that a sender wants to transmit a
payload to two recipients using the two-layer structure.
Note that it is possible to send two single-layer payloads, 
although it will be less efficient.</t>

<t>An example of the COSE_Encrypt structure using the HPKE scheme is
shown in <xref target="hpke-example-two"/>. Line breaks and comments have been
inserted for better readability.</t>

<t>This example uses AES-128-GCM for encryption of the plaintext
"This is the content." with aad="" at layer 0. The ciphertext is
detached.</t>

<t>At the recipient structure at layer 1, this example uses
HPKE-v1-Base-P256-SHA256-AES128GCM as the algorithm, which
correspond to the following HPKE algorithm combination:</t>

<t><list style="symbols">
  <t>KEM: DHKEM(P-256, HKDF-SHA256)</t>
  <t>KDF: HKDF-SHA256</t>
  <t>AEAD: AES-128-GCM</t>
  <t>Mode: Base</t>
</list></t>

<figure title="COSE_Encrypt Example for HPKE" anchor="hpke-example-two"><artwork><![CDATA[
96_0([
    / alg = AES-128-GCM (1) /
    h'a10101',
    {
      / iv /
      5: h'67303696a1cc2b6a64867096'
    },
    / detached ciphertext /
    h'',
    [
        [
            / alg = HPKE-v1-Base-P256-SHA256-AES128GCM /
            h'a1011823',
            {
                / kid /
                4: h'3031',
                / encapsulated_key /
                36: h'0421ccd1b00dd958d77e10399c
                      97530fcbb91a1dc71cb3bf41d9
                      9fd39f22918505c973816ecbca
                      6de507c4073d05cceff73e0d35
                      f60e2373e09a9433be9e95e53c',
            },
            / ciphertext containing encrypted CEK /
            h'bb2f1433546c55fb38d6f23f5cd95e1d72eb4
              c129b99a165cd5a28bd75859c10939b7e4d',
        ],
        [
            / alg = HPKE-v1-Base-P256-SHA256-AES128GCM /
            h'a1011823',
            {
                / kid /
                4: h'313233', // kid
                / encapsulated_key /
                -4: h'6de507c4073d05cceff73e0d35
                      f60e2373e09a9433be9e95e53c
                      9fd39f22918505c973816ecbca
                      6de507c4073d05cceff73e0d35
                      f60e2373e09a9433be9e95e53c',
            },
            / ciphertext containing encrypted CEK /
            h'c4169d7d8e81666d8be13bb2f1433546c55fb
              c129b99a165cd5a28bd75859c10939b7e4d',
        ]        
    ],
])
]]></artwork></figure>

<t>To offer authentication of the sender the payload in <xref target="hpke-example-two"/>
is signed with a COSE_Sign1 wrapper, which is outlined in <xref target="hpke-example-sign"/>.
The payload in <xref target="hpke-example-sign"/> is meant to contain the content of
<xref target="hpke-example-two"/>.</t>

<figure title="COSE_Encrypt Example for HPKE" anchor="hpke-example-sign"><artwork><![CDATA[
18(
  [
    / protected / h'a10126' / {
            \ alg \ 1:-7 \ ECDSA 256 \
          } / ,
    / unprotected / {
          / kid / 4:'sender@example.com'
        },
    / payload /     h'AA19...B80C',
    / signature /   h'E3B8...25B8'
  ]
)
]]></artwork></figure>

</section>
</section>
<section anchor="sec-cons"><name>Security Considerations</name>

<t>This specification is based on HPKE and the security considerations of HPKE
<xref target="RFC9180"/> are therefore applicable also to this specification.</t>

<t>HPKE assumes the sender is in possession of the public key of the recipient and
HPKE COSE makes the same assumptions. Hence, some form of public key distribution
mechanism is assumed to exist.</t>

<t>HPKE relies on a source of randomness to be available on the device. Additionally, 
with the two layer structure the CEK is randomly generated and the it MUST be
ensured that the guidelines in <xref target="RFC8937"/> for random number generations are followed.</t>

<t>HPKE in Base mode does not offer authentication as part of the HPKE KEM. In this
case COSE constructs like COSE_Sign, COSE_Sign1, COSE_MAC, or COSE_MAC0 can be
used. HPKE also offers modes that offer authentication.</t>

<t>If COSE_Encrypt or COSE_Encrypt0 is used with a detached ciphertext then the
subsequently applied integrity protection via COSE_Sign, COSE_Sign1, COSE_MAC, 
or COSE_MAC0 does not cover this detached ciphertext. Implementers MUST ensure
that the detached ciphertext also experiences integrity protection. This is, for
example, the case when an AEAD cipher is used to produce the detached ciphertext
but may not be guaranteed by non-AEAD ciphers.</t>

</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>This document requests IANA to add new values to the 'COSE Algorithms' and to 
the 'COSE Header Parameters' registries in the 'Standards Action 
With Expert Review category.</t>

<section anchor="cose-algorithms-registry"><name>COSE Algorithms Registry</name>

<t><list style="symbols">
  <t>Name: HPKE-v1-Base-P256-SHA256-AES128GCM</t>
  <t>Value: TBD1 (Assumed: 35)</t>
  <t>Description: Cipher suite for COSE-HPKE version 1 in Base Mode that uses the DHKEM(P-256, HKDF-SHA256) KEM, the HKDF-SHA256 KDF and the AES-128-GCM AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
  <t>Name: HPKE-v1-Base-X25519_SHA256_ChaCha20Poly1305</t>
  <t>Value: TBD2 (Assumed: 36)</t>
  <t>Description: Cipher suite for COSE-HPKE version 1 in Base Mode that uses the DHKEM(X25519, HKDF-SHA256) KEM, the HKDF-SHA256 KDF, and the ChaCha20Poly1305 AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
  <t>Name: HPKE-v1-Base-P384-SHA384_AES256GCM</t>
  <t>Value: TBD3 (Assumed: 37)</t>
  <t>Description: Cipher suite for COSE-HPKE version 1 in Base Mode that uses the DHKEM(P-384, HKDF-SHA384) KEM, the HKDF-SHA384 KDF, and the AES-256-GCM AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
  <t>Name: HPKE-v1-Base-P521_SHA512_AES256GCM</t>
  <t>Value: TBD4 (Assumed: 38)</t>
  <t>Description: Cipher suite for COSE-HPKE version 1 in Base Mode that uses the DHKEM(P-521, HKDF-SHA512) KEM, the HKDF-SHA512 KDF, and the AES-256-GCM AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
</list></t>

</section>
<section anchor="cose-header-parameters"><name>COSE Header Parameters</name>

<t><list style="symbols">
  <t>Name: encapsulated_key</t>
  <t>Label: TBDX (Assumed: -4)</t>
  <t>Value type: bstr</t>
  <t>Value Registry: N/A</t>
  <t>Description: HPKE encapsulated key</t>
  <t>Reference: [[This specification]]</t>
</list></t>

</section>
</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>

<reference anchor="RFC9180">
  <front>
    <title>Hybrid Public Key Encryption</title>
    <author fullname="R. Barnes" initials="R." surname="Barnes"/>
    <author fullname="K. Bhargavan" initials="K." surname="Bhargavan"/>
    <author fullname="B. Lipp" initials="B." surname="Lipp"/>
    <author fullname="C. Wood" initials="C." surname="Wood"/>
    <date month="February" year="2022"/>
    <abstract>
      <t>This document describes a scheme for hybrid public key encryption (HPKE). This scheme provides a variant of public key encryption of arbitrary-sized plaintexts for a recipient public key. It also includes three authenticated variants, including one that authenticates possession of a pre-shared key and two optional ones that authenticate possession of a key encapsulation mechanism (KEM) private key. HPKE works for any combination of an asymmetric KEM, key derivation function (KDF), and authenticated encryption with additional data (AEAD) encryption function. Some authenticated variants may not be supported by all KEMs. We provide instantiations of the scheme using widely used and efficient primitives, such as Elliptic Curve Diffie-Hellman (ECDH) key agreement, HMAC-based key derivation function (HKDF), and SHA2.</t>
      <t>This document is a product of the Crypto Forum Research Group (CFRG) in the IRTF.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9180"/>
  <seriesInfo name="DOI" value="10.17487/RFC9180"/>
</reference>

<reference anchor="RFC9052">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="96"/>
  <seriesInfo name="RFC" value="9052"/>
  <seriesInfo name="DOI" value="10.17487/RFC9052"/>
</reference>

<reference anchor="RFC9053">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines a set of algorithms that can be used with the CBOR Object Signing and Encryption (COSE) protocol (RFC 9052).</t>
      <t>This document, along with RFC 9052, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9053"/>
  <seriesInfo name="DOI" value="10.17487/RFC9053"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC8937">
  <front>
    <title>Randomness Improvements for Security Protocols</title>
    <author fullname="C. Cremers" initials="C." surname="Cremers"/>
    <author fullname="L. Garratt" initials="L." surname="Garratt"/>
    <author fullname="S. Smyshlyaev" initials="S." surname="Smyshlyaev"/>
    <author fullname="N. Sullivan" initials="N." surname="Sullivan"/>
    <author fullname="C. Wood" initials="C." surname="Wood"/>
    <date month="October" year="2020"/>
    <abstract>
      <t>Randomness is a crucial ingredient for Transport Layer Security (TLS) and related security protocols. Weak or predictable "cryptographically secure" pseudorandom number generators (CSPRNGs) can be abused or exploited for malicious purposes. An initial entropy source that seeds a CSPRNG might be weak or broken as well, which can also lead to critical and systemic security problems. This document describes a way for security protocol implementations to augment their CSPRNGs using long-term private keys. This improves randomness from broken or otherwise subverted CSPRNGs.</t>
      <t>This document is a product of the Crypto Forum Research Group (CFRG) in the IRTF.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8937"/>
  <seriesInfo name="DOI" value="10.17487/RFC8937"/>
</reference>

<reference anchor="RFC2630">
  <front>
    <title>Cryptographic Message Syntax</title>
    <author fullname="R. Housley" initials="R." surname="Housley"/>
    <date month="June" year="1999"/>
    <abstract>
      <t>This document describes the Cryptographic Message Syntax. This syntax is used to digitally sign, digest, authenticate, or encrypt arbitrary messages. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2630"/>
  <seriesInfo name="DOI" value="10.17487/RFC2630"/>
</reference>




    </references>


<?line 430?>

<section anchor="contributors"><name>Contributors</name>

<t>We would like thank the following individuals for their contributions
to the design of embedding the HPKE output into the COSE structure 
following a long and lively mailing list discussion.</t>

<t><list style="symbols">
  <t>Richard Barnes</t>
  <t>Ilari Liusvaara</t>
</list></t>

<t>Finally, we would like to thank Russ Housley and Brendan Moran for their
contributions to the draft as co-authors of initial versions.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

<t>We would like to thank John Mattsson, Mike Prorock, Michael Richardson,
and Goeran Selander for their review feedback.</t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

