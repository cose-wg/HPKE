<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.4 (Ruby 3.0.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="pre5378Trust200902" docName="draft-ietf-cose-hpke-08" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="COSE HPKE">Use of Hybrid Public-Key Encryption (HPKE) with CBOR Object Signing and Encryption (COSE)</title>

    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization></organization>
      <address>
        <postal>
          <country>Austria</country>
        </postal>
        <email>hannes.tschofenig@gmx.net</email>
      </address>
    </author>
    <author initials="O." surname="Steele" fullname="Orie Steele" role="editor">
      <organization>Transmute</organization>
      <address>
        <postal>
          <country>United States</country>
        </postal>
        <email>orie@transmute.industries</email>
      </address>
    </author>
    <author initials="D." surname="Ajitomi" fullname="Daisuke Ajitomi">
      <organization>bibital</organization>
      <address>
        <postal>
          <country>Japan</country>
        </postal>
        <email>dajiaji@gmail.com</email>
      </address>
    </author>
    <author initials="L." surname="Lundblade" fullname="Laurence Lundblade">
      <organization>Security Theory LLC</organization>
      <address>
        <postal>
          <country>United States</country>
        </postal>
        <email>lgl@securitytheory.com</email>
      </address>
    </author>

    <date year="2024" month="February" day="12"/>

    <area>Security</area>
    <workgroup>COSE</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 60?>

<t>This specification defines hybrid public-key encryption (HPKE) for use with 
CBOR Object Signing and Encryption (COSE). HPKE offers a variant of
public-key encryption of arbitrary-sized plaintexts for a recipient public key.</t>

<t>HPKE works for any combination of an asymmetric key encapsulation mechanism (KEM),
key derivation function (KDF), and authenticated encryption with
additional data (AEAD) function. Authentication for HPKE in COSE is
provided by COSE-native security mechanisms or by one of the authenticated
variants of HPKE.</t>

<t>This document defines the use of the HPKE with COSE.</t>



    </abstract>



  </front>

  <middle>


<?line 74?>

<section anchor="introduction"><name>Introduction</name>

<t>Hybrid public-key encryption (HPKE) <xref target="RFC9180"/> is a scheme that 
provides public key encryption of arbitrary-sized plaintexts given a 
recipient's public key.</t>

<t>This document defines the use of the HPKE with COSE (<xref target="RFC9052"/>, <xref target="RFC9053"/>).</t>

</section>
<section anchor="conventions-and-terminology"><name>Conventions and Terminology</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
"SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
when, and only when, they appear in all capitals, as shown here.</t>

<t>This specification uses the following abbreviations and terms:</t>

<t><list style="symbols">
  <t>Content-encryption key (CEK), a term defined in CMS <xref target="RFC2630"/>.</t>
  <t>Hybrid Public Key Encryption (HPKE) is defined in <xref target="RFC9180"/>.</t>
  <t>pkR is the public key of the recipient, as defined in <xref target="RFC9180"/>.</t>
  <t>skR is the private key of the recipient, as defined in <xref target="RFC9180"/>.</t>
  <t>Key Encapsulation Mechanism (KEM), see <xref target="RFC9180"/>.</t>
  <t>Key Derivation Function (KDF), see <xref target="RFC9180"/>.</t>
  <t>Authenticated Encryption with Associated Data (AEAD), see <xref target="RFC9180"/>.</t>
  <t>Additional Authenticated Data (AAD), see <xref target="RFC9180"/>.</t>
</list></t>

</section>
<section anchor="hpke-for-cose"><name>HPKE for COSE</name>

<section anchor="overview"><name>Overview</name>

<t>This specification supports two uses of HPKE in COSE, namely</t>

<t><list style="symbols">
  <t>HPKE in a single recipient setup.
This use case utilizes a one layer COSE structure. 
<xref target="one-layer"/> provides the details.</t>
  <t>HPKE in a multiple recipient setup. 
This use case requires a two layer COSE structure.  <xref target="two-layer"/> 
provides the details. While it is possible to support the single 
recipient use case with a two layer structure, the single 
layer setup is more efficient.</t>
</list></t>

<t>In both cases a new COSE header parameter, called 'encapsulated_key',
is used to convey the content of the enc structure defined in the HPKE
specification. "Enc" represents the serialized public key.</t>

<t>For use with HPKE the 'encapsulated_key' header parameter MUST
be present in the unprotected header parameter and MUST contain
the encapsulated key, which is output of the HPKE KEM, and it
is a bstr.</t>

<section anchor="one-layer"><name>Single Recipient / One Layer Structure</name>

<t>With the one layer structure the information carried inside the 
COSE_recipient structure is embedded inside the COSE_Encrypt0.</t>

<t>HPKE is used to directly encrypt the plaintext and the resulting ciphertext
is either included in the COSE_Encrypt0 or is detached. If a payload is
transported separately then it is called "detached content". A nil CBOR
object is placed in the location of the ciphertext. See Section 5
of <xref target="RFC9052"/> for a description of detached payloads.</t>

<t>The sender MUST set the alg parameter in the protected header, which
indicates the use of HPKE.</t>

<t>The sender MUST place the 'encapsulated_key' parameter into the unprotected
header. Although the use of the 'kid' parameter in COSE_Encrypt0 is
discouraged by RFC 9052, this documents RECOMMENDS the use of the 'kid' parameter
(or other parameters) to explicitly identify the static recipient public key
used by the sender. If the COSE_Encrypt0 contains the 'kid' then the recipient may
use it to select the appropriate private key.</t>

<t>The HPKE specification describes an API and this API uses an "aad" parameter
as input. When COSE_Encrypt0 is used then there is no AEAD function executed
by COSE natively and HPKE offers this functionality.</t>

<t>The "aad" parameter provided to the HPKE API is constructed
as follows (and the design has been re-used from <xref target="RFC9052"/>):</t>

<figure><artwork><![CDATA[
Enc_structure = [
    context : "Encrypt0",
    protected : empty_or_serialized_map,
    external_aad : bstr
]

empty_or_serialized_map = bstr .cbor header_map / bstr .size 0
]]></artwork></figure>

<t>The protected field in the Enc_structure contains the protected attributes 
from the COSE_Encrypt0 structure at layer 0, encoded in a bstr type.</t>

<t>The HPKE APIs also use an "info" parameter as input and the details are
provided in <xref target="info"/>.</t>

<t><xref target="cddl-hpke-one-layer"/> shows the COSE_Encrypt0 CDDL structure.</t>

<figure title="CDDL for HPKE-based COSE_Encrypt0 Structure" anchor="cddl-hpke-one-layer"><artwork><![CDATA[
COSE_Encrypt0_Tagged = #6.16(COSE_Encrypt0)

; Layer 0
COSE_Encrypt0 = [
    Headers,
    ciphertext : bstr / nil,
]
]]></artwork></figure>

<t>The COSE_Encrypt0 MAY be tagged or untagged.</t>

<t>An example is shown in <xref target="one-layer-example"/>.</t>

</section>
<section anchor="two-layer"><name>Multiple Recipients / Two Layer Structure</name>

<t>With the two layer structure the HPKE information is conveyed in the COSE_recipient 
structure, i.e. one COSE_recipient structure per recipient.</t>

<t>In this approach the following layers are involved:</t>

<t><list style="symbols">
  <t>Layer 0 (corresponding to the COSE_Encrypt structure) contains the content (plaintext)
encrypted with the CEK. This ciphertext may be detached, and if not detached, then
it is included in the COSE_Encrypt structure.</t>
  <t>Layer 1 (corresponding to a recipient structure) contains parameters needed for 
HPKE to generate a shared secret used to encrypt the CEK. This layer conveys the 
encrypted CEK in the encCEK structure. The protected header MUST contain the HPKE 
alg parameter and the unprotected header MUST contain the 'encapsulated_key' parameter.
The unprotected header MAY contain the kid parameter to identify the static recipient
public key the sender has been using with HPKE.</t>
</list></t>

<t>This two-layer structure is used to encrypt content that can also be shared with
multiple parties at the expense of a single additional encryption operation.
As stated above, the specification uses a CEK to encrypt the content at layer 0.</t>

<t>The COSE_recipient structure, shown in <xref target="cddl-hpke"/>, is repeated for each
recipient.</t>

<figure title="CDDL for HPKE-based COSE_Encrypt Structure" anchor="cddl-hpke"><artwork><![CDATA[
COSE_Encrypt_Tagged = #6.96(COSE_Encrypt)
 
/ Layer 0 /
COSE_Encrypt = [
  Headers,
  ciphertext : bstr / nil,
  recipients : + COSE_recipient
]

/ Layer 1 /
COSE_recipient = [
  protected   : bstr .cbor header_map,
  unprotected : header_map,
  encCEK      : bstr,
]

header_map = {
  Generic_Headers,
  * label => values,
}
]]></artwork></figure>

<t>The COSE_Encrypt MAY be tagged or untagged.</t>

<t>When encrypting the content at layer 0 then the instructions in
Section 5.3 of <xref target="RFC9052"/> MUST to be followed, which includes the
calculation of the authenticated data strcture.</t>

<t>At layer 1 where HPKE is used to encrypt the CEK, the "aad" parameter
provided to the HPKE API is constructed as follows (and the design has
been re-used from <xref target="RFC9052"/>):</t>

<figure><artwork><![CDATA[
Enc_structure = [
    context : "Enc_Recipient",
    protected : empty_or_serialized_map,
    external_aad : bstr
]

empty_or_serialized_map = bstr .cbor header_map / bstr .size 0
]]></artwork></figure>

<t>The protected field in the Enc_structure contains the protected attributes 
from the COSE_recipient structure at layer 1, encoded in a bstr type.</t>

<t>The HPKE APIs also use an "info" parameter as input and the details are
provided in <xref target="info"/>.</t>

<t>An example is shown in <xref target="two-layer-example"/>.</t>

</section>
</section>
<section anchor="key-representation"><name>Key Representation</name>

<t>The COSE_Key with the existing key types can be used to represent KEM private
or public keys. When using a COSE_Key for COSE-HPKE, the following checks are made:</t>

<t><list style="symbols">
  <t>The "kty" field MUST be present, and it MUST be one of the key types for HPKE KEM.</t>
  <t>If the "kty" field is "OKP" or "EC2", the "crv" field MUST be present
and it MUST be a curve for HPKE KEM.</t>
  <t>If the "alg" field is present, it MUST be one of the supported COSE-HPKE "alg" values
and the key type of its KEM MUST match the "kty" field.
If the "kty" field is "OKP" or "EC2", the curve of the KEM MUST match the "crv" field.
The valid combinations of the "alg", "kty" and "crv" are shown in <xref target="ciphersuite-kty-crv"/>.</t>
  <t>If the "key_ops" field is present, it MUST include only "derive bits" for the private key
and MUST be empty for the public key.</t>
</list></t>

<t>Examples of the COSE_Key for COSE-HPKE are shown in <xref target="key-representation-example"/>.</t>

</section>
<section anchor="info"><name>Info Parameter</name>

<t>The HPKE specification defines the "info" parameter as a context information
structure that is used to ensure that the derived keying material is bound to
the context of the transaction.</t>

<t>This section provides a suggestion for constructing the info structure. HPKE leaves
the info parameter for these two functions as optional. Application profiles of this
specification MAY populate the fields of the COSE_KDF_Context structure or MAY use
a different structure as input to the "info" parameter. If no content for the
"info" parameter is not supplied, it defaults to a zero-length byte string.</t>

<t>This specification re-uses the context information structure defined in
<xref target="RFC9053"/> as a foundation for the info structure. This payload becomes the content
of the info parameter for the HPKE functions, when utilized. For better readability of
this specification the COSE_KDF_Context structure is repeated in <xref target="cddl-cose-kdf"/>.</t>

<figure title="COSE_KDF_Context Data Structure as 'info' Parameter for HPKE" anchor="cddl-cose-kdf"><artwork><![CDATA[
   PartyInfo = (
       identity : bstr / nil,
       nonce : bstr / int / nil,
       other : bstr / nil
   )

   COSE_KDF_Context = [
       AlgorithmID : int / tstr,
       PartyUInfo : [ PartyInfo ],
       PartyVInfo : [ PartyInfo ],
       SuppPubInfo : [
           keyDataLength : uint,
           protected : empty_or_serialized_map,
           ? other : bstr
       ],
       ? SuppPrivInfo : bstr
   ]
]]></artwork></figure>

</section>
</section>
<section anchor="ciphersuite-registration"><name>Ciphersuite Registration</name>

<t>A ciphersuite is a group of algorithms, often sharing component algorithms
such as hash functions, targeting a security level.
An HPKE ciphersuite, is composed of the following choices:</t>

<t><list style="symbols">
  <t>HPKE Mode</t>
  <t>KEM Algorithm</t>
  <t>KDF Algorithm</t>
  <t>AEAD Algorithm</t>
</list></t>

<t>The "KEM", "KDF", and "AEAD" values are chosen from the HPKE IANA
registry <xref target="HPKE-IANA"/>.</t>

<t>For readability the algorithm ciphersuites labels are built according
to the following scheme:</t>

<figure><artwork><![CDATA[
HPKE-<Version>-<Mode>-<KEM>-<KDF>-<AEAD>
]]></artwork></figure>

<t>The "Mode" indicator may be populated with the following values from
Table 1 of <xref target="RFC9180"/>:</t>

<t><list style="symbols">
  <t>"Base" refers to "mode_base" described in Section 5.1.1 of <xref target="RFC9180"/>,
which only enables encryption to the holder of a given KEM private key.</t>
  <t>"PSK" refers to "mode_psk", described in Section 5.1.2 of <xref target="RFC9180"/>,
which authenticates using a pre-shared key.</t>
  <t>"Auth" refers to "mode_auth", described in Section 5.1.3 of <xref target="RFC9180"/>,
which authenticates using an asymmetric key.</t>
  <t>"Auth_Psk" refers to "mode_auth_psk", described in Section 5.1.4 of <xref target="RFC9180"/>,
which authenticates using both a PSK and an asymmetric key.</t>
</list></t>

<t>For a list of ciphersuite registrations, please see <xref target="IANA"/>. The following
table summarizes the relationship between the ciphersuites registered in this
document, which all use the "Base" mode and the values registered in the
HPKE IANA registry <xref target="HPKE-IANA"/>.</t>

<figure><artwork><![CDATA[
+--------------------------------------------------+------------------+
| COSE-HPKE                                        |      HPKE        |
| Cipher Suite Label                               | KEM | KDF | AEAD |
+--------------------------------------------------+-----+-----+------+
| HPKE-Base-P256-SHA256-AES128GCM                  |0x10 | 0x1 | 0x1  |
| HPKE-Base-P384-SHA384-AES256GCM                  |0x11 | 0x2 | 0x2  |
| HPKE-Base-P521-SHA512-AES256GCM                  |0x12 | 0x3 | 0x2  |
| HPKE-Base-X25519-SHA256-AES128GCM                |0x20 | 0x1 | 0x1  |
| HPKE-Base-X25519-SHA256-ChaCha20Poly1305         |0x20 | 0x1 | 0x3  |
| HPKE-Base-X448-SHA512-AES256GCM                  |0x21 | 0x3 | 0x2  |
| HPKE-Base-X448-SHA512-ChaCha20Poly1305           |0x21 | 0x3 | 0x3  |
+--------------------------------------------------+-----+-----+------+
]]></artwork></figure>

<t>As the list indicates, the ciphersuite labels have been abbreviated at least
to some extend to maintain the tradeoff between readability and length.</t>

<t>The ciphersuite list above is a minimal starting point. Additional
ciphersuites can be registered into the already existing registry.
For example, once post-quantum cryptographic algorithms have been standardized
it might be beneficial to register ciphersuites for use with COSE-HPKE.
Additionally, ciphersuites utilizing the compact encoding of the public keys,
as defined in <xref target="I-D.irtf-cfrg-dnhpke"/>, may be standardized for use in
constrained environments.</t>

<t>As a guideline for ciphersuite submissions to the IANA CoSE algorithm
registry, the designated experts must only register combinations of 
(KEM, KDF, AEAD) triple that consitute valid combinations for use with
HPKE, the KDF used should (if possible) match one internally used by the
KEM, and components should not be mixed between global and national standards.</t>

<section anchor="cosekeys-for-cose-hpke-ciphersuites"><name>COSE_Keys for COSE-HPKE Ciphersuites</name>

<t>The COSE-HPKE ciphersuite uniquely determines the type of KEM for which a COSE_Key is used.
The following mapping table shows the valid combinations
of the COSE-HPKE ciphersuite, COSE_Key type and its curve.</t>

<figure title="COSE_Key Types and Curves for COSE-HPKE Ciphersuites" anchor="ciphersuite-kty-crv"><artwork><![CDATA[
+---------------------+--------------+
| COSE-HPKE           | COSE_Key     |
| Ciphersuite Label   | kty | crv    |
+---------------------+-----+--------+
| HPKE-Base-P256-\*   | EC2 | P-256  |
| HPKE-Base-P384-\*   | EC2 | P-384  |
| HPKE-Base-P521-\*   | EC2 | P-521  |
| HPKE-Base-X25519-\* | OKP | X25519 |
| HPKE-Base-X448-\*   | OKP | X448   |
| HPKE-Base-CP256-\*  | EC2 | P-256  |
| HPKE-Base-CP384-\*  | EC2 | P-384  |
| HPKE-Base-CP521-\*  | EC2 | P-521  |
+---------------------+-----+--------+
]]></artwork></figure>

</section>
</section>
<section anchor="examples"><name>Examples</name>

<t>This section provides a set of examples that shows all COSE message types
(COSE_Encrypt0, COSE_Encrypt and COSE_MAC) to which the COSE-HPKE can be
applied, and also provides some examples of key representation for HPKE KEM.</t>

<t>Each example of the COSE message includes the following information
that can be used to check the interoperability of COSE-HPKE implementations:</t>

<t><list style="symbols">
  <t>plaintext: Original data of the encrypted payload.</t>
  <t>external_aad: Externally supplied AAD.</t>
  <t>skR: A recipient private key.</t>
  <t>skE: An ephemeral sender private key paired with the encapsulated_key.</t>
</list></t>

<section anchor="one-layer-example"><name>Single Recipient / One Layer COSE Message</name>

<t>This example assumes that a sender wants to communicate an
encrypted payload to a single recipient in the most efficient way.</t>

<t>An example of the COSE_Encrypt0 structure using the HPKE scheme is
shown in <xref target="hpke-example-one"/>. Line breaks and comments have been inserted
for better readability.</t>

<t>This example uses the following:</t>

<t><list style="symbols">
  <t>alg: HPKE-Base-P256-SHA256-AES128GCM</t>
  <t>plaintext: "This is the content."</t>
  <t>external_aad: "COSE-HPKE app"</t>
  <t>skR: h'57c92077664146e876760c9520d054aa93c3afb04e306705db6090308507b4d3'</t>
  <t>skE: h'42dd125eefc409c3b57366e721a40043fb5a58e346d51c133128a77237160218'</t>
</list></t>

<figure title="COSE_Encrypt0 Example for HPKE" anchor="hpke-example-one"><artwork><![CDATA[
16([
    / alg = HPKE-Base-P256-SHA256-AES128GCM (Assumed: 35) /
    h'a1011823',
    {
        / kid /
        4: h'3031',
        / encapsulated_key /
        -4: h'045df24272faf43849530db6be01f42708b3c3a9
              df8e268513f0a996ed09ba7840894a3fb946cb28
              23f609c59463093d8815a7400233b75ca8ecb177
              54d241973e',
    },
    / encrypted plaintext /
    h'35aa3d98739289b83751125abe44e3b977e4b9abbf2c8cfaade
      b15f7681eef76df88f096',
])
]]></artwork></figure>

</section>
<section anchor="two-layer-example"><name>Multiple Recipients / Two Layer COSE Message</name>

<t>In this example we assume that a sender wants to transmit a
payload to two recipients using the two-layer structure.
Note that it is possible to send two single-layer payloads, 
although it will be less efficient.</t>

<section anchor="coseencrypt"><name>COSE_Encrypt</name>

<t>An example of the COSE_Encrypt structure using the HPKE scheme is
shown in <xref target="hpke-example-cose-encrypt"/>. Line breaks and comments have been
inserted for better readability.</t>

<t>This example uses the following:</t>

<t><list style="symbols">
  <t>Encryption alg: AES-128-GCM</t>
  <t>plaintext: "This is the content."</t>
  <t>detatched ciphertext: h'cc168c4e148c52a83010a75250935a47ccb8682deebcef8fce5d60c161e849f53a2dc664'</t>
  <t>kid:"01"
  <list style="symbols">
      <t>alg: HPKE-Base-P256-SHA256-AES128GCM</t>
      <t>external_aad: "COSE-HPKE app"</t>
      <t>skR: h'57c92077664146e876760c9520d054aa93c3afb04e306705db6090308507b4d3'</t>
      <t>skE: h'97ad883f949f4cdcb1301b9446950efd4eb519e16c4a3d78304eec832692f9f6'</t>
    </list></t>
  <t>kid:"02"
  <list style="symbols">
      <t>alg: HPKE-Base-X25519-SHA256-CHACHA20POLY1305</t>
      <t>external_aad: "COSE-HPKE app"</t>
      <t>skR: h'bec275a17e4d362d0819dc0695d89a73be6bf94b66ab726ae0b1afe3c43f41ce'</t>
      <t>skE: h'b8ed3f4df56c230e36fa6620a47f24d08856d242ea547c5521ff7bd69af8fd6f'</t>
    </list></t>
</list></t>

<figure title="COSE_Encrypt Example for HPKE" anchor="hpke-example-cose-encrypt"><artwork><![CDATA[
96_0([
    / alg = AES-128-GCM (1) /
    h'a10101',
    {
        / iv /
        5: h'b3fb95dde18c6f90a9f0ae55',
    },
    / detached ciphertext /
    null,
    [
        [
            / alg = HPKE-Base-P256-SHA256-AES128GCM (Assumed: 35) /
            h'a1011823',
            {
                / kid /
                4: h'3031',
                / encapsulated_key /
                -4: h'04d97b79486fe2e7b98fb1bd43
                      c4faee316ff38d28609a1cf568
                      40a809298a91e601f1cc0c2ba4
                      6cb67b41f4651b769cafd9df78
                      e58aa7f5771291bd4f0f420ba6',
            },
            / ciphertext containing encrypted CEK /
            h'24450f54ae93375351467d17aa7a795cfede2
              c03eced1ad21fcb7e7c2fe64397',
        ],
        [
            / alg = HPKE-Base-X25519-SHA256-CHACHA20POLY1305 (Assumed: 42) /
            h'a101182a',
            {
                / kid /
                4: h'3032',
                / encapsulated_key /
                -4: h'd1afbdc95b0e735676f6bca34f
                      be50f2822259ac09bfc3c500f1
                      4a05de9b2833',
            },
            / ciphertext containing encrypted CEK /
            h'079b443ec6dfcda6a5f8748aff3875146a8ed
              40359e1279b545166385d8d9b59',
        ],
    ],
])
]]></artwork></figure>

<t>To offer authentication of the sender the payload in <xref target="hpke-example-cose-encrypt"/>
is signed with a COSE_Sign1 wrapper, which is outlined in <xref target="hpke-example-sign"/>.
The payload in <xref target="hpke-example-sign"/> is meant to contain the content of
<xref target="hpke-example-cose-encrypt"/>.</t>

<figure title="COSE_Encrypt Example for HPKE" anchor="hpke-example-sign"><artwork><![CDATA[
18(
  [
    / protected / h'a10126' / {
            \ alg \ 1:-7 \ ECDSA 256 \
          } / ,
    / unprotected / {
          / kid / 4:'sender@example.com'
        },
    / payload /     h'AA19...B80C',
    / signature /   h'E3B8...25B8'
  ]
)
]]></artwork></figure>

</section>
<section anchor="cosemac"><name>COSE_MAC</name>

<t>An example of the COSE_MAC structure using the HPKE scheme is
shown in <xref target="hpke-example-cose-mac"/>.</t>

<t>This example uses the following:</t>

<t><list style="symbols">
  <t>MAC alg: HMAC 256/256</t>
  <t>payload: "This is the content."</t>
  <t>kid:"01"
  <list style="symbols">
      <t>alg: HPKE-Base-P256-SHA256-AES128GCM</t>
      <t>external_aad: "COSE-HPKE app"</t>
      <t>skR: h'57c92077664146e876760c9520d054aa93c3afb04e306705db6090308507b4d3'</t>
      <t>skE: h'e5dd9472b5807636c95be0ba2575020ba91cbb3561b52be141da89678c664307'</t>
    </list></t>
  <t>kid:"02"
  <list style="symbols">
      <t>alg: HPKE-Base-X25519-SHA256-CHACHA20POLY1305</t>
      <t>external_aad: "COSE-HPKE app"</t>
      <t>skR: h'bec275a17e4d362d0819dc0695d89a73be6bf94b66ab726ae0b1afe3c43f41ce'</t>
      <t>skE: h'78a49d7af71b5244498e943f361aa0250184afc48b8098a68ae97ccd2cd7e56f'</t>
    </list></t>
</list></t>

<figure title="COSE_MAC Example for HPKE" anchor="hpke-example-cose-mac"><artwork><![CDATA[
97_0([
    / alg = HMAC 256/256 (5) /
    h'a10105',
    {},
    / payload = 'This is the content.' /
    h'546869732069732074686520636f6e74656e742e',
    / tag /
    h'5cdcf6055fcbdb53b4001d8fb88b2a46b200ed28e1ed77e16ddf43fb3cac3a98',
    [
        [
            / alg = HPKE-Base-P256-SHA256-AES128GCM (Assumed: 35) /
            h'a1011823',
            {
                / kid = '01' /
                4: h'3031',
                / encapsulated_key /
                -4: h'043ac21632e45e1fbd733f002a
                      621aa4f3d94737adc395d5a7cb
                      6e9554bd1ad273aec991493786
                      d72616d9759bf8526e6e20c1ed
                      c41ba5739f2b2e441781aa0eb4',
            },
            / ciphertext containing encrypted MAC key /
            h'5cee2b4235a7ff695164f7a8d1e79ccf3ca3d
              e8b22f3592626020a95b2a8d3fb4d7aa7fe37
              432426ee70073a368f29d1',
        ],
        [
            / alg = HPKE-Base-X25519-SHA256-CHACHA20POLY1305 (Assumed: 42) /
            h'a101182a',
            {
                / kid = '02' /
                4: h'3032',
                / encapsulated_key /
                -4: h'02cffacc60def3bb3d0a1c3661
                      227c9de8dc2b1d3939dd2c07d4
                      49ebb0bba324',
            },
            / ciphertext containing encrypted MAC key /
            h'3f5b8b60271d5234dbea554dc1461d0239e9f
              4589f6415e8563b061dbcb37795a616111b78
              2b4c589b534309327ffadc',
        ],
    ],
])
]]></artwork></figure>

</section>
</section>
<section anchor="key-representation-example"><name>Key Representation</name>

<t>Examples of private and public KEM key representation are shown below.</t>

<section anchor="kem-public-key-for-hpke-base-p256-sha256-aes128gcm"><name>KEM Public Key for HPKE-Base-P256-SHA256-AES128GCM</name>

<figure title="Key Representation Example for HPKE-Base-P256-SHA256-AES128GCM" anchor="hpke-example-key-1"><artwork><![CDATA[
{
    / kty = 'EC2' /
    1: 2,
    / kid = '01' /
    2: h'3031',
    / alg = HPKE-Base-P256-SHA256-AES128GCM (Assumed: 35) /
    3: 35,
    / crv = 'P-256' /
    -1: 1,
    / x /
    -2: h'65eda5a12577c2bae829437fe338701a10aaa375e1bb5b5de108de439c08551d',
    / y /
    -3: h'1e52ed75701163f7f9e40ddf9f341b3dc9ba860af7e0ca7ca7e9eecd0084d19c'
}
]]></artwork></figure>

</section>
<section anchor="kem-private-key-for-hpke-base-p256-sha256-aes128gcm"><name>KEM Private Key for HPKE-Base-P256-SHA256-AES128GCM</name>

<figure title="Key Representation Example for HPKE-Base-P256-SHA256-AES128GCM" anchor="hpke-example-key-2"><artwork><![CDATA[
{
    / kty = 'EC2' /
    1: 2,
    / kid = '01' /
    2: h'3031',
    / alg = HPKE-Base-P256-SHA256-AES128GCM (Assumed: 35) /
    3: 35,
    / key_ops = ['derive_bits'] /
    4: [8],
    / crv = 'P-256' /
    -1: 1,
    / x /
    -2: h'bac5b11cad8f99f9c72b05cf4b9e26d244dc189f745228255a219a86d6a09eff',
    / y /
    -3: h'20138bf82dc1b6d562be0fa54ab7804a3a64b6d72ccfed6b6fb6ed28bbfc117e',
    / d /
    -4: h'57c92077664146e876760c9520d054aa93c3afb04e306705db6090308507b4d3',
}
]]></artwork></figure>

</section>
<section anchor="kem-public-key-for-hpke-base-x25519-sha256-chacha20poly1305"><name>KEM Public Key for HPKE-Base-X25519-SHA256-CHACHA20POLY1305</name>

<figure title="Key Representation Example for HPKE-Base-X25519-SHA256-CHACHA20POLY1305" anchor="hpke-example-key-3"><artwork><![CDATA[
{
    / kty = 'OKP' /
    1: 1,
    / kid = '11' /
    2: h'3131',
    / alg = HPKE-Base-X25519-SHA256-CHACHA20POLY1305 (Assumed: 42) /
    3: 42,
    / crv = 'X25519' /
    -1: 4,
    / x /
    -2: h'cb7c09ab7b973c77a808ee05b9bbd373b55c06eaa9bd4ad2bd4e9931b1c34c22',
}
]]></artwork></figure>

</section>
</section>
</section>
<section anchor="sec-cons"><name>Security Considerations</name>

<t>This specification is based on HPKE and the security considerations of
<xref target="RFC9180"/> are therefore applicable also to this specification.</t>

<t>HPKE assumes the sender is in possession of the public key of the recipient and
HPKE COSE makes the same assumptions. Hence, some form of public key distribution
mechanism is assumed to exist but outside the scope of this document.</t>

<t>HPKE relies on a source of randomness to be available on the device. Additionally, 
with the two layer structure the CEK is randomly generated and it MUST be
ensured that the guidelines in <xref target="RFC8937"/> for random number generations are followed.</t>

<t>HPKE in Base mode does not offer authentication as part of the HPKE KEM. In this
case COSE constructs like COSE_Sign, COSE_Sign1, COSE_MAC, or COSE_MAC0 can be
used to add authentication. HPKE also offers modes that offer authentication.</t>

<t>If COSE_Encrypt or COSE_Encrypt0 is used with a detached ciphertext then the
subsequently applied integrity protection via COSE_Sign, COSE_Sign1, COSE_MAC, 
or COSE_MAC0 does not cover this detached ciphertext. Implementers MUST ensure
that the detached ciphertext also experiences integrity protection. This is, for
example, the case when an AEAD cipher is used to produce the detached ciphertext
but may not be guaranteed by non-AEAD ciphers.</t>

</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>This document requests IANA to add new values to the 'COSE Algorithms' and to 
the 'COSE Header Parameters' registries.</t>

<section anchor="cose-algorithms-registry"><name>COSE Algorithms Registry</name>

<t><list style="symbols">
  <t>Name: HPKE-Base-P256-SHA256-AES128GCM</t>
  <t>Value: TBD1 (Assumed: 35)</t>
  <t>Description: Cipher suite for COSE-HPKE in Base Mode that uses the DHKEM(P-256, HKDF-SHA256) KEM, the HKDF-SHA256 KDF and the AES-128-GCM AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
  <t>Name: HPKE-Base-P384-SHA384-AES256GCM</t>
  <t>Value: TBD3 (Assumed: 37)</t>
  <t>Description: Cipher suite for COSE-HPKE in Base Mode that uses the DHKEM(P-384, HKDF-SHA384) KEM, the HKDF-SHA384 KDF, and the AES-256-GCM AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
  <t>Name: HPKE-Base-P521-SHA512-AES256GCM</t>
  <t>Value: TBD5 (Assumed: 39)</t>
  <t>Description: Cipher suite for COSE-HPKE in Base Mode that uses the DHKEM(P-521, HKDF-SHA512) KEM, the HKDF-SHA512 KDF, and the AES-256-GCM AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
  <t>Name: HPKE-Base-X25519-SHA256-AES128GCM</t>
  <t>Value: TBD7 (Assumed: 41)</t>
  <t>Description: Cipher suite for COSE-HPKE in Base Mode that uses the DHKEM(X25519, HKDF-SHA256) KEM, the HKDF-SHA256 KDF, and the AES-128-GCM AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
  <t>Name: HPKE-Base-X25519-SHA256-ChaCha20Poly1305</t>
  <t>Value: TBD8 (Assumed: 42)</t>
  <t>Description: Cipher suite for COSE-HPKE in Base Mode that uses the DHKEM(X25519, HKDF-SHA256) KEM, the HKDF-SHA256 KDF, and the ChaCha20Poly1305 AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
  <t>Name: HPKE-Base-X448-SHA512-AES256GCM</t>
  <t>Value: TBD9 (Assumed: 43)</t>
  <t>Description: Cipher suite for COSE-HPKE in Base Mode that uses the DHKEM(X448, HKDF-SHA512) KEM, the HKDF-SHA512 KDF, and the AES-256-GCM AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
  <t>Name: HPKE-Base-X448-SHA512-ChaCha20Poly1305</t>
  <t>Value: TBD10 (Assumed: 44)</t>
  <t>Description: Cipher suite for COSE-HPKE in Base Mode that uses the DHKEM(X448, HKDF-SHA512) KEM, the HKDF-SHA512 KDF, and the ChaCha20Poly1305 AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
</list></t>

</section>
<section anchor="cose-header-parameters"><name>COSE Header Parameters</name>

<t><list style="symbols">
  <t>Name: encapsulated_key</t>
  <t>Label: TBDX (Assumed: -4)</t>
  <t>Value type: bstr</t>
  <t>Value Registry: N/A</t>
  <t>Description: HPKE encapsulated key</t>
  <t>Reference: [[This specification]]</t>
</list></t>

</section>
</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>

<reference anchor="RFC9180">
  <front>
    <title>Hybrid Public Key Encryption</title>
    <author fullname="R. Barnes" initials="R." surname="Barnes"/>
    <author fullname="K. Bhargavan" initials="K." surname="Bhargavan"/>
    <author fullname="B. Lipp" initials="B." surname="Lipp"/>
    <author fullname="C. Wood" initials="C." surname="Wood"/>
    <date month="February" year="2022"/>
    <abstract>
      <t>This document describes a scheme for hybrid public key encryption (HPKE). This scheme provides a variant of public key encryption of arbitrary-sized plaintexts for a recipient public key. It also includes three authenticated variants, including one that authenticates possession of a pre-shared key and two optional ones that authenticate possession of a key encapsulation mechanism (KEM) private key. HPKE works for any combination of an asymmetric KEM, key derivation function (KDF), and authenticated encryption with additional data (AEAD) encryption function. Some authenticated variants may not be supported by all KEMs. We provide instantiations of the scheme using widely used and efficient primitives, such as Elliptic Curve Diffie-Hellman (ECDH) key agreement, HMAC-based key derivation function (HKDF), and SHA2.</t>
      <t>This document is a product of the Crypto Forum Research Group (CFRG) in the IRTF.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9180"/>
  <seriesInfo name="DOI" value="10.17487/RFC9180"/>
</reference>

<reference anchor="RFC9052">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="96"/>
  <seriesInfo name="RFC" value="9052"/>
  <seriesInfo name="DOI" value="10.17487/RFC9052"/>
</reference>

<reference anchor="RFC9053">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines a set of algorithms that can be used with the CBOR Object Signing and Encryption (COSE) protocol (RFC 9052).</t>
      <t>This document, along with RFC 9052, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9053"/>
  <seriesInfo name="DOI" value="10.17487/RFC9053"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC8937">
  <front>
    <title>Randomness Improvements for Security Protocols</title>
    <author fullname="C. Cremers" initials="C." surname="Cremers"/>
    <author fullname="L. Garratt" initials="L." surname="Garratt"/>
    <author fullname="S. Smyshlyaev" initials="S." surname="Smyshlyaev"/>
    <author fullname="N. Sullivan" initials="N." surname="Sullivan"/>
    <author fullname="C. Wood" initials="C." surname="Wood"/>
    <date month="October" year="2020"/>
    <abstract>
      <t>Randomness is a crucial ingredient for Transport Layer Security (TLS) and related security protocols. Weak or predictable "cryptographically secure" pseudorandom number generators (CSPRNGs) can be abused or exploited for malicious purposes. An initial entropy source that seeds a CSPRNG might be weak or broken as well, which can also lead to critical and systemic security problems. This document describes a way for security protocol implementations to augment their CSPRNGs using long-term private keys. This improves randomness from broken or otherwise subverted CSPRNGs.</t>
      <t>This document is a product of the Crypto Forum Research Group (CFRG) in the IRTF.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8937"/>
  <seriesInfo name="DOI" value="10.17487/RFC8937"/>
</reference>

<reference anchor="RFC2630">
  <front>
    <title>Cryptographic Message Syntax</title>
    <author fullname="R. Housley" initials="R." surname="Housley"/>
    <date month="June" year="1999"/>
    <abstract>
      <t>This document describes the Cryptographic Message Syntax. This syntax is used to digitally sign, digest, authenticate, or encrypt arbitrary messages. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2630"/>
  <seriesInfo name="DOI" value="10.17487/RFC2630"/>
</reference>


<reference anchor="I-D.irtf-cfrg-dnhpke">
   <front>
      <title>Deterministic Nonce-less Hybrid Public Key Encryption</title>
      <author fullname="Dan Harkins" initials="D." surname="Harkins">
         <organization>Hewlett-Packard Enterprise</organization>
      </author>
      <date day="5" month="February" year="2024"/>
      <abstract>
	 <t>   This document describes enhancements to the Hybrid Public Key
   Encryption standard published by CFRG.  These include use of &quot;compact
   representation&quot; of relevant public keys, support for key-wrapping,
   and two ways to address the use of HPKE on lossy networks: a
   determinstic, nonce-less AEAD scheme, and use of a rolling sequence
   number with existing AEAD schemes.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-irtf-cfrg-dnhpke-04"/>
   
</reference>


<reference anchor="HPKE-IANA" target="https://www.iana.org/assignments/hpke/hpke.xhtml">
  <front>
    <title>Hybrid Public Key Encryption (HPKE) IANA Registry</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="2023" month="October"/>
  </front>
</reference>


    </references>


<?line 796?>

<section anchor="contributors"><name>Contributors</name>

<t>We would like thank the following individuals for their contributions
to the design of embedding the HPKE output into the COSE structure 
following a long and lively mailing list discussion:</t>

<t><list style="symbols">
  <t>Richard Barnes</t>
  <t>Ilari Liusvaara</t>
</list></t>

<t>Finally, we would like to thank Russ Housley and Brendan Moran for their
contributions to the draft as co-authors of initial versions.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

<t>We would like to thank John Mattsson, Mike Prorock, Michael Richardson,
and Goeran Selander for their review feedback.</t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+V9a3PcuJX2d/4KlFz1yk6627xftDvZaCQ59toeey1PsqmJ
ywWSoMSou9kh2ZIV2/nt73MAkATZLdlzSWVS2zUjq0kCODg4l+ccHFDz+dxq
y3Ypjtj3jWBVwZ7epnWZs9fbdFlm8+filp2ts/p205bVmj18+vr52SN2U7aX
7OTbV2/Yq/SvImvZeXmxLtcXjK/z0eMnr87PHlk8TWtxfcToG6MerLzK1nyF
QfOaF+28FG0xz6pGzC83V2Jux1bGW3FR1bdHrGlzyyo39RHb1CLwovhtvW1a
17YT27V4LfgROxfZti7bW+umqq8u6mq7UWNZV+IWl/Ij9mzdinot2vkpjWdZ
TQtK3/NltQYNt6KxNuUR+6GtshlrqrqtRdHgt9sV/fLOsvi2vazqI2tuMVau
myP2dMHeNtllVYh1eYGLajJP+XotmvGdqr7g6/LvnPhxhO9ixcvlEbuUjy7a
/tHfX6w+LEAhHsmq7bqlqR9jonXJh2FfLdh5K8RS9EO+qksxXKsrWkiRl21V
T8dmb2u+blbbVgxUVGj9+7a7vijXuRwR/DCo+H5dtiLHIFiSZqDldMGO/4qB
VmVPzCkvm+2VMK6PKUjLtGz5chg/538t8R/mjq+LrFqZ4/433/D1MN6LBXux
XefpkufD9F/wbS3WmRjdGg/aCQd7eykgUOzFi5OBgOXF8veNfqCV96dUjGdv
rat6hY6vBa3lmycnruMk+tfYiXz9a+LEdverHbjDrx79apXrYtJNnHhR12Po
ybbP5qeLsia9KOqLeb4mzaDrpD/zZ8ffHdMXfDrZZPqD2UPecV9d0co90mq2
X6upEXsjLkrIwK1uzesL0UJc23bTHD1+fHNzsyj5mi8wymPeNFD7lVi3zWOi
Tv5YfLhsV0vVOgfPIKJZW6WiZq7tejT7+XzOeIoxeAZNfHtZNqzZiKwsykwu
GctFUZIeXSqaN8oSQZeZ2KEZjGRbGC5pkayvNkkLyUaYu0LUDePsmkPP1i0u
WPuHg2HkNaS35vXtvCn/DpHYLHkJs/KhbSQVnNWYxKYEOzTJDH0sLEuORJZJ
P7e+hXSt0nLN+57XjMPYrAR0T7aikfmm2S7VIyuRwV6UzYo9fH728tGM7Bq4
VJfX6n6xXWdqcs9PnzyaySmTWIAU4iloNWZCnLJ4DhuBb3xJi8TZw+Oz49NH
fUdQ7aG5HAGEy3mUa2XFS5jMurouc3Se3spr87WUaNbp00B2A6Gkp2Btabro
eUyepdnfSP+DYRZaLuAmtiRfvUhQ023T96JYK50RCEArkq1VmeewhtYDRma/
rvKtnBMW4ivk6eNHrb6fP2OOWFQYaLESGI23rJtyYyzw1wvJBZiDhWZWLyeH
zVhSfsKc2UNFMazM588z1n3xPn9+tCAWnFTra+JztW6kWLwV9apcV8vq4pbG
E3IK5CMbdvDy+/O3BzP1L/vulfz9zdn/fP/szdkp/X7+9PjFi/6X7onzp6++
f4H7lv5taHny6uXLs+9OVWNcZZNLL4//fKCE9eDV67fPXn13/OKABKwFG6ye
DXDxrK1YKhgxsgYIIIHmYJRosrpM8QVtvj15/f/WabP5D8dXTCDDjDWUv5Nl
/vzZuoHEqfGq9RKzll/B0lvGNxvBa+qHL5cMqkduCggAozSX1c2aXYpaLPYa
K6yMWqKiWi6rG2lxJNwp+cB10L1qjiCetB4tZjU3pIZW4OHJ2XNSXPmkXnk5
r5OX53o+cAufPy/QxdeYcpKjoRNDqKmDzdUbeoCINuRYi1cvnDPF47s6aYxO
pCESP6UXTb1h615ObB3MidjX6nQwf08m5m9Pi+ORNTwbW0N23DRVVspbp4M1
3N/RYDjHfeqG+9tBEaXakhmVwNR68IC9uhb1dSlu9opVs91sAETB4JtKyZg2
jZ0FnkkEBDG2rN/0N2CuIIBLg/+gpd1uFvC7chCyIxnHj21bLmGgyMKRVV7y
W6FIA96uYTABqxYMrT5+xO25vA1t6u0frXEuWmCoZjEmYLVdtuVmDwlsh4Za
/G1b1pIGmuV+GkABbvYUoJO9RLA/XZYYtGxJKDcVkEm6lHZDM1I+rJlDQLkn
rqdGSoJJSU/EbNJY36ZZ0WirChZKFFg66hDseLZmaYXOqFua3FrcqGldCgDU
mm14jaWDps/wyHIJ4Tkc/L3I30OPDmeW4lROc8jIiN9KKjJlPzo9Q7uBTlPP
Ok9hjcRqwQ4g+weYPsxoQ8BNTQ26xJfKX5n+6IkJruQS09O7xO5MjJELsVIy
DXKYjqLtGovXAp1hpJ02ZCil66E5wmtaeoL9WETVDGa7zC6J79W23WzbkVuE
xVAGvmwt6b0JZpL6Qd3O1fq96Vf+MXsFyX8hF/O85+HHB4PAW9afaObU/aAk
A7vpeg/lobMZrxE7EfsbyKe8bdG6vzdUoW8M8sQKzisfN5DPa/tkQ2cUejRk
IYfGZO2yxx3KAncoQ3kbaYAbUkR4IwwN70U3iSUCExLk6bLlNh9EZTQsoTXp
QFoO8JMv2DPgGizU7bLiOSE/GTGSVqGDRtAKtmSJyBxqDdRyfdD10cntAZAl
W5dLmTywKoXUSWOXPBuoWVZZj42l0PdTQPwL24qQTt4OLDxg4B+NwxUw6CFZ
T4OeQbNQyAeCmWtRJWVWsHR5YUikJmcqs1oGEcbl0viPIFoPX8cDyAnepT7m
iFjiiaZYalRwbolIb3txOUWEh1dlPu5ksp4Ep8oGIW3NLxReB8sY8WwmwVaP
OZsBop1/YRTrIXhdSWHqrzWPSELFhw1MSEkyCqmGgyyU6WoQQsO07IuSLCnd
qX5Osk1K3a5oatvQGCRJsRuBDrbisksSRnIBYkliJtd3A7YCrxBcMWCLXjCp
a9NYVIFMwnHs+PUzrWDgGX2Rjhk3DjjPDwzeAPOUaxgncktidzW0Mmu6lTFY
V4xQxxDLiQ+Io2j5dXjFVHgFrhIJZvgqyenawY633XwmZLE+YtNCJjuheZDG
AqtK44QReaPRbMMedgYFjEBAzS5xLxUgvBZzOYuirlamDj4CzP3HP/5hYbrv
B2v3DftBpgSkGYCZOpKOSPIDkQPdGZTsCIZx096+r+r3g2N6v+Ib9SCaixrT
fI/J4Vmy8NY7y7qjDUamJ9giSyGvSpPk9cf6OoVpzJYkS54NdBSlWPYmaTyd
kRQOLXiLAD7dkkWwJF925XfoA/Gkcij2jGx5pa2x8lmsvd0IUyqxSpC0ZSPB
oBQ58jzm4nYyx4YVk9CIAqghVpcQnJpKWPrxY4ZYWSVdTZxHQU+zh/qT09MX
BjhTKz165P1bfkE25hv2IFw44cPRzUeW9R/a4drjZr2APJUr1KilHuy+Xmis
GpzHDOtNA388Yg/20K9SXt8cSGK7xMU85SSt40F7r3/wWbF6fBvxKYWdrZoR
YaG1+h0TPyYF5SsCumUXJEre9mTM9X2F/wFAXnbIuIcgDebzFnhzF4MMkNfA
IHug6aDGJhBR6gzIOHHwg4G0DHBbLgCzCd/ciVU2GLK/rgCutDnSmsK3TuJf
SaOUO4x+XS2vRX7EKPjVS88eZlUNgLKp4EDxvLZGJvOHwR+Nla3Dvw97yPPI
0kgIk73pWIVweqGiDUOG4BVoPTs8oJFiAdPbGhfJLFsKxdyHkkZq0E3N2TM1
My+4b1aD90SgIGg0klmF+9D8QqwF4SuK7S7BUkJcWS3aHhCaOHCYtpITJQWK
cwab8Fg3JVykb0bANTaCGqWbuHyQOWsMlzrDswfl77S/DwUtpC7u6wUKaXZy
Rdm8fnjw4l68YRnJjgFnDB5tSxHeEOt06Z5eFcfgfcr+TjBlojCjjC4Za4ib
XjWZdu2DY1DdloQd1LoBMom1glp9CG+kaM0U44akgUI567iRUyS/k1bXXZS6
m5zicr0nktKRO3ihhWEC90jszDRyvdWlnCOYgXhSSEpIdAUUyTLNxdRJjHxE
MvYRjyxmPe4NxeNRO+0kDBdxp4MwIvwGt347mRYBhse9zj6eRmlqnEH8WNf7
FEXQQKacHk3uae2SH9UF+S7LgCHfsI947g+k5GX23pjab7AuqViyb37Hrvly
K3Dx867X+1pfd7+ru8fTwW5LCNuJINm0veIzwPBSA0mZ/UQY30drC49N4jVp
FlRyV7kPMsA6wFe2V9ouC+Fk1iUI920gqE0MDNsZ5OOOLofSvHXnI3fVVltN
pTxTGP+VeJndj5etXwwvv++Rw/8J0LwPivQC5/zrUPOd2K93FRPsJxPWb7qc
mxLjjw/gh+b16KKpmtSkhzPiQ9lI3ZO+C5NspItJRS/PfUeUA+tCWwurNzi9
Rkejys/xYZguKz0nns0mYA6gKLtSYG4FOTiibK+MLa/a2wO93FKNh2xfl4Lr
rxv7fsME+i1FELxApzrcN/sFdw9ePX99QBbp4OzEPdBqmtXXdwwNYZ+MzVm2
ra/FncMBwhjD9TPYT71OJmvjKvmle1A2Wg9vTpSalnBCtCyyR2B0jZiNqVKC
/usZoGakadrX8cAglfkXRF+Zm/vOTdde0j/Tw8rNONmaFtz0+NLTNtuyFXM8
OcczJNzGsgkYkk1zHy+1SVe7bwdy/1qwFMw5kKsz2UrSvOxWQZqq4TkzTX2m
lK2f0X7Bns5oV/2mWvsMCs9e96bi4wNpAe5JFQ37tfvsDO+tuRGrWWYox9ux
i2r6y8oyEcNkFpwUE+2l0aYmabUlsaus3jd/6BPjMlnL9bZ+t9ekXXK/lQLn
uYW/b/rN/t69dR6faDbDBMmApeDXkPr+/jBfvVCNilq75FRDfKg2CtYu2PGG
MoW8I6Uo+0Usm/HGhUQom2oj4wVloUjMJkt++uT9iZ78wNZKxQ3gqsVZXlLK
bOJSOhegvfx07WQmcl31mEdPzdpZY5nFa6WRWJaEZEq5ic8B+hsVCf5d1PAQ
Yn0Bu57ethSj1GDw/p1lhRiMsHcsOXv3fSyjAEDJXEGiMRRx7FtKOXaX3k8F
jIQYBduWZvL+JdY7m90Kz+S+ere/CABJm0ipaFuZQ+A5T0vKUFKlTbs75y+s
pRlqDIGILBy8ygupt4RJAHigtu2tVOBv2MOuNkqFhxh8GizIz7qiQrL+Vim3
iMwHVLbbbEt3Hln0c4foDsHhc7y8qGq48tWzU7RW/bYyFtAPSGK/l9QesR8M
2t+NH/njvY+cQ+5eb9Pumb4gDB+YDNqffqEk74htQcTMfOCrgaT+/NeIGd2d
gZb/UtTAYGlyuscmmbtu6fo4ZspGua1+burqIYnhoWGXO89Okc0DdjI4qq6W
TRla65gZTkwV98haURl1d0sE+a0KCL0M2yX+qVYbIACKdfpnrGYLTwtagO4v
TdFX5XIKXvVlUEtxLZYLQo1SUwwiZiqQwABk8rWWmdCrKjOh6kZk05eAu1T+
AI/fyxR9P30y+i73EYYLaisAjcjL49mu5oYe64CLdI4YD76Q9SBcjikrCWtd
FAiN68sPoW1MbRGbaq030dTQ5lwbFc+qkdJtuQRDs6yqKU1macs7TF1VXVHW
kMRFjvmff0RPYPPv5v9JfMA/mBL9PH2CnzSZ3w0ByQE9QsVEcocONOrcX+dC
jFThMKhmBc3fesupfsAZAlZZySGX4uBbhNe0h642Xyp2sMJg71N5dVSUNES+
zmLa1cxSca4EQ2JNwzVmokez5LJaUpJKJoZUAZmB7xX+AUWvz5/vErRprrDU
dxLk3kGQGVg3fbAAnDTXmaxuUKp/2R2Vmt83rPdjhp3WRfbjvn+Nye0d+0vT
9n/E+LKKgzNwV5VU7pIj5Z+zJbSD+jUNTG0YH5gG4EqqMlGlQZ3+vDXlz2ql
zDXb1Qqm5+/aB9dC5T2ay3JDfvRG6DTLSLfUYKLuctVGAV2XUKHKNoqCJcRR
IkxM6wMWLf3TnoTVmwF2hxlQSvrb+Y/+7GnyW+uTAdm/8vNJ/WM2+UT9SA7B
E9FyvJDZtC/1Q8r1SRrUT8qMfvrp8zJ/ynlJnhHn56/dIJyfPz2mf47Pzh03
/sPJyz302B8cG5TgH/1Tzsvox4t96of+QT/o7s5+VA+u/jntJ3Ad6idw3C/1
o3rw9vfzv24QOMkXZ4Z+3HvnNe7n5JLjP9d+XS1vHc8O7uzH2+nH9+Ovm5fr
3Dsvo587qdntR9LzS8mP9G3HyihIe9OXn8ym9qBztZecAmwyGH1Jqky4UdzW
tOR1G2B9mRyU4SO8ZDnsrsB25aIqit7qmH6erIYKZHS+bTQ8kSc3JRTMWpXr
coVItWlp2wOGdVNhnIVRTGmNrJnObY1MkfaHfElU3A4Zsc4mLaQp1hE8QBxh
eeCqdv63LV+3W2AR8qzVRc03MIcGmDO4JE8FcUASQF7aAlyVF5ctUZKKtaD6
PsxB5toUXWMTPDqJ0Jsw4L5+ksvb2biJCpKGnPpqgzhdpTXpogaERgZvZk2r
afedEqFNGY13zBn1FCJMVOE9l/2I9XVZV+ocx0KKGKDGFrHSErdVMsBY22ab
rsqmkcG8XhPpG06q87OBqz1inBnJcHUS4cNGUF3raksuk8DPwM5Jdsp6KOv5
YI1nTJ1PgOOlrKvaY8NTZbtt9+a2zMWwhrQmGXaZXmkuq+0yZw/Loi8WfaQT
aJTuk5XmcsWYUZlk9eWFfVDQdD1R4A9+r8oP9LhWmItllUJkqIUiTOmAXJFG
5Zi6XFUzSVYZYUwzZIXn0wiCbdfl37ZUFJRTLLTqE1Bd6pEcGvWsMcCQG9OJ
JrXXOmBgBHobKZAKi/R1ILs8tozUyw5ds2EgSYlKyjYqc3kvYJhcvQsPfBoG
kF97d9+MvP0ndgVj9QnKf60eu2/Q35qDTpz1X34jezs7If/3eo5Le33x5DFc
2utqJ4/h0h0eEA9+Yq+ev8ZPdWWfY9K96cdwhU17O+nncO8UTvo53DuFk34O
O1P4Svb2OYDdrPI4E4DlfSt3C0iATkh47lMUlQHo0sH35DqFROuiyxtLe6Jk
nVCyrLZbiabhF0qRGmtcxzQb755K2ujCy+MTWQGplG2iHNKnWbzLDcqAgnam
erq0Lx5y2bSFMM5QT3YxrDMqvun2ogx97Kk3d1ENLTcT0H3BgrGbJDd9dM4P
ZkUWHfR5O2NSJQ286qhTmYq+MEceTr0o+zNmQ8m6LkPRKUcK6sz9ySOsYG9+
u2QqOz4+1cdOjtixWUQ6DoWbqzPcXzOxoQRCTQZXlXmYh1Q2vKzNFMC0FkWZ
5nsLxiWXX2ouGzXj/R6Clr5ucXiDuK4TNd4RdSMPvckK/9UKpjyThT5ra4dH
Kn28c7hDI7UVcM5wAgG93o53Kat9lbRDVlUFu33GR594oxT8sFsiS+x0f1Rq
R9HrC8IHwJX8qum8oioiHhBVuW6oPiO3ir1Z4MWES7uHqaRIAVYcfSl6Gkve
gey2HKWxFwc7gnZg7A5tNgedfF0eBlGWuHYUhaHv+KGIozAK7SwJXDu3A5/z
xMs8XqS2Lzw7jOwgT0M7sT07Duwo9XPvsBPFy0PfzXPHDYQoMt9OMi8NIi8M
ReQ63Ldt3yvSgAex8PwwD5zM8TzMh0eR60VOaLtOfKi8pRM+VCndx7JI/Zsv
RpMPj6XIYZZe8Ig9lm0vD7ljO07seocqVfuxT+o+ltVUj/vvPtHu2Z5zODOe
mWqK0WAuW9h+kBeu70ZuwQsfziMJPBvcSYXtFLhsxymxLjGTyfjkRSzcMA4c
r7B5koQit5OUR7Fvx4nPwaPED7PUjSfNXK8A37MAdz078fI4dgIega2u56VR
kPFYZKkTRZNmgZ+7vpNEntCT+zyz+vl1itcfqehY5wWce3kSR17ixkkae1Hg
YGGBNHyIQZpEkfDTBJFW4WZxVnB1GJ0+qRMUURg7kIEoxFTjwk5CDP3uUe8J
p/o1coO9zmrXNk55f7mydGKsdssUhpLOThNvOpN1l8VSbw1AkMQtw0bRZp9R
eTVYlj1VdAvru6rttj13z23JkBTdKaOnG3dHOGZUe6hPQ6DtTQm3Df8Fx9mM
jmI96CC2ZuGXzOLPsYpyL0ML0NeZR6szj+wO88i+zj4a5xmlqYQRmMMKzL/e
LFLVS6sO6vQldaTOWeaEceYLx4+zwOWxZzs2jwI3gLYF3I+yLI3D2M2FSDNR
xEUmghyG0gkdAdUvAo+7eQYjSvYQ9uXowHYOpFJ8pVFXj95vtNUzv5jh7rqT
xjuJOIyKVySYjJ/lMCbgAIyRHyaBLYrcFylAuXDCDFYqj8AfX4gs9twwcYuk
CId5u3fMe5LqenqM/1z79asXf6bk0o9nQCoyNwq4A2OUe6Gb27GT5JkNevM4
4ZGXijDFdNIw5GnkhlzYqcML4WXwRL6TiQkD0ljkuJEXQZi5ni28sOBh6NpY
e5h59B4HIYypK3gAaQgQBhRFlOZhwiENeVho75WE7+2J/zKElD10xh7Kdvb4
p/La8DaBJI4cQ5DnwomzsEjgOeA9RBBMrfpwCm2oF1VdrbdLvb877JeOdk5/
lrvtPjtut/t8nDimXTfcffa546HNPW65+3TuOU+iNEr8OCyEK6I0iYvUSXPf
22mgPplfcCE8JywKL87dGNrCnQzSMHXFPaE2j+3ETWKeOCKE03eyzM7clPt3
NIBfD6F6QAdh4KRRmGS8yJO8iO4aQQQx51ERRJHjJkR7YQNZ2CkPJ7z5PJus
pLH8uhiRTPy4Ln66cq7vB3YB0yESDx7fC2BWotyJQAKPkiArRC7cCaWZ7YlM
5A7PoQ5ZGokocwsR+l4SGSQOu+VfFLn7jYQhe757p+zxny177s+TPfCjSHPY
4tQWkRfAMBdhmnHPL+5Y6FSA827sum6Q8AyAsMi8LLDtwrlL9jgMukiAE72p
pv0ismBHSer7WFuAuCznIQ+KOPJjTroRkWAAb+YT2nzbC+AgXDQN/MAJQy+G
Jc7xLdmVhXd3Y0ITXewDh3ux4dtKnRE0dzeNGmqN6WSSuTvd+wVYQ2eIKZfb
hc86o0gv23HYTU0v0qjHZ7SXQ7J61C/1QpuHb+8dXT0lj9kLekGPOg3f71EM
x+Gt+9GYDqJiqgXq/NBQ9PJYq4kbHuL3sWb8RWrjX5hzNI/wz9nJ6fkxo+TZ
X4zHPqNZ523MAwHjzrSCQaEOFet/r6mll04d9g/2fqtjy2Mtf8fHTrJYLL6N
7ZPD7hmVWCfA+lg+c+Z9G+MZN/g2ph7fWXfIk6xO/1o56mH0y+OTOyE07v1s
+LzimVysr0G9NJ4CU/QbVuQx/ie8q7h2D9r9d0SiANZ54kduGsR2FHoh2VFg
N+4GUWCT90ucLE1hVp00cFMAdifncRJGMcFvz47+7ZFoFHM/ySNeRDRD3/eT
WCR41Asdzm1EJE7s8yLz4xT4I+ZhDI+N+CR3szwSwYBEox0kasoPezhJltgd
mvy4o5bfsMN9EnbYtw/8MA6TyHNt9TOi7xAALF8RCnwL6KcremVu+cXQGOFG
EdpBAASRp4GX+rbt5IBrcZy63A9T17YFEJlwRB5FCEHyvKBskpdxSrDEh79C
XAuOAdr/M+GtxzPXCT1X+IFwADcizyts2+V3gU8XwuMXHqmWh1gv8yCdAY+y
9K4GIgkCP5XYLvK4yJLE8RMvisM7GuQQbaxNEgXAL3HghiIULiLkHaDQfTLf
SXkQeUnhppiG70QxCbhI/Z8LaUjMd7lHkiaEm/ouIvqoKKCfTugXEY9zR0RJ
lhWQKG9KrYAQugWgjRu6IewPhzly0QQC6OcEjqHI07Sb7yFQDIWIbBus88K4
cJPc+fUjYpJa9z6p/ZnA2HazouBZFtq5KDwY8dxGjOWF4V0413XhW3IR54ir
nNxLvCSHmbOj/K4Yy09EmtppyrEC/ywp8oogjeHD3MjJA9fz81RwqEqewfs5
ue16iUimSN8P4qSAfwxEHIReauPBNEu9CIEVh9Y4DgLCnZxv6mdoBovoU87X
hchCb388lgbUGOEfmtc+7PMjzm8Z+VTzTEq39URJQF3MQdvye7b3hiMqqQDS
0QlMeth421t/zPMetKLmrb0KbYFDhs9OeiF2jpjb+Zwdu+xObPHP8RQefem6
od1djCS3nrvB5iDF6R740F2UJISByDnwAxBORAkEEbvw92RYEG3ZDpSYc46Q
XDhpGqQI/Bw7zgWC7AwYKnDynvxOVucedeuIwIXHDNAFHEURFYnwbfjOpPBg
eT0EqCmPQxs4Q9gZPAGPRCJEltt27OdOkh0a53BHUkXy4HQitUdipsJ1Dy+1
3Oml1+Lzb732+ngYHYs4VAeZ3tPJr8N3+mEYwh/idz9RUlKeBanjZBzwKEmK
JANMtoOs8NNEuJSeJCsESxP5gevG8BzcdRIsch5yOxFFcYekuLbjxXDaLlqn
YR6EwNV2wQHeYZVsn3s8BHqFg88oCxSmYZGGhMjStMgcwN6+2y6posz9zw4M
ZvdJoPvPkMC7jM8XQoZ9kvjq+WtDEp2JJDoTSXTukcSfAAE8+jIRMtWNKWX+
finL0iizE6x9CjCfRQBIdiyEHaRJmuYe4pkgQHQjsIBp7gMe4qdIEs9J4cv9
zHXvXzfvR6/b/fNXtTD9y69PKvmOOV2ODu/ViGxOJXSf9549ozOF8iUClT61
0lWJ96dasnGHMgEzvDqXq1fT1KKglyNydc6PdvZkyYusG5yO2b0peaiU6BNU
8lUscndQyMrD3crInfeOEsGqP1UPw6+6LvlKb23KDbNmwZ7SC8RnqvyGymKk
yx56zqmOkQ6oU7HM8CZmKmxVAqbeeUYlrym9jnDb9i/za7JqI7oDjf1L1rqJ
1mJJrwCp5Gs7q22dyUdrEF6t1rSRqV6MwK95uZS80+fjcnFdZsKsnqXCUuvm
S68Jkm99afQAy9v+zTL55Mi0pQ6e5sPJ074atOlf4UovLNcv3FMdsvV2RW/5
1r2qw5718F6H4V2Ga0biqw4f5JVQhyb3pim5fDvOziseF0zvVlvyxZ1ygfvz
qg1blldiyErOjATlrE9UzZguIqMvdlec1ZU/8TyfkKLPu0rp1W9dI/p1Pc8+
4uk1ScV4b7kbcudNcDqTum+bqtVv1bCabdqIv20xwPKW6SoyWZ11IdVRpxyJ
a9cl//L0rdH8+2XIqmuZEDZe/zh6++KzruCLOCDlRQmLZZxS3p2EZJss/C1J
15q9dOtzqGUzI6my+kpumVqRL2glVtBb+OhchurdPC69kW/6FncRYZFyUlW0
rtS92HIIbitUde8a4N3oVxbnsq6weWI55amX6cu66V22ooH0yTZahujFr/pY
jS6VPpTC2p/Naw6VYa2YNdxVL4EZDjjiIV1NDXMxVA0bvQwv7bfmjH2n/hbF
F8ul2B+JtCP29ttTZwzg6Obp8BLNo+4kjaqtHddfdupMB+6UNvTp2tOnUNaH
EsTN2NPnp080FY/Ue1qlSg9XZXF252bMzWFaFyrtYyd8owojwAfARQCKd/Iy
LPKFkG/WrmFsRH3Enp2d/4FuvRHytHeGWbIffsBEj5SQwYC9e6ceUFUZOc38
z1Qzuo+B+07ZjBnomQyMfmkGYuCBgfiyh4FUpisL5U0O0or/Oji473zRmIMm
YPOSX5qDGH/gIKjYw0Fc/RVz8I6TVWMeRibodX5ZHioCvlKPZ79ORb7/WNmY
l/E4gPg18HLn5Nm/nqH7zteN+ZiYfPR+YT5i+H9ztb7nYOHERdsmI/1fASP/
xeLYwaAduGQwepqCpzvyaJBk6f8aHJ0rjkp+yzMf+pUV/bUOYh2x7x4f7zBf
snn6rvrJxDCvnaAXk1N/ECnl2ZX+ey0q2qxoIn8C6pXHy2RMg5VbX+2c5MjL
6zLfAmJ3L2Qp5dt7+pi16d6uoN9IRwdf5IvnR/vz+mX6/TnL8Z9hYJbx103Y
stJ/Vmmp3kdNf0pLvveVYmB60fhWRulyk/5NiYC5ziF/9Zr+ehh7tuR1yV6U
2+aaY8ks60mpI9ib8WQrPd836I09rbbNUqhjp9+CnznigJcVAPwwaWs06Q5w
y78vR4FkVs3VX8qSKflyDeHkS3at3imh8P5xdrWubpYiv5Ahzi7/O5L+u7rE
8Lxtm6ZChPWSbr6uq7rKrugbZiyW3czpCYvI/kMliN5zseQyqTGsFp3MRaRQ
IBYhMVhY/x9FCCUjlW8AAA==

-->

</rfc>

