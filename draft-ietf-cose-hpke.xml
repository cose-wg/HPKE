<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.5.24 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="pre5378Trust200902" docName="draft-ietf-cose-hpke-01" category="std">
  <front>
    <title abbrev="COSE HPKE">Use of Hybrid Public-Key Encryption (HPKE) with CBOR Object Signing and Encryption (COSE)</title>

    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization>Arm Limited</organization>
      <address>
        <email>hannes.tschofenig@arm.com</email>
      </address>
    </author>
    <author initials="R." surname="Housley" fullname="Russ Housley">
      <organization abbrev="Vigil Security">Vigil Security, LLC</organization>
      <address>
        <email>housley@vigilsec.com</email>
      </address>
    </author>
    <author initials="B." surname="Moran" fullname="Brendan Moran">
      <organization>Arm Limited</organization>
      <address>
        <email>Brendan.Moran@arm.com</email>
      </address>
    </author>

    <date year="2022" month="January" day="17"/>

    <area>Security</area>
    <workgroup>COSE</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification defines hybrid public-key encryption (HPKE) for use with 
CBOR Object Signing and Encryption (COSE). HPKE offers a variant of
public-key encryption of arbitrary-sized plaintexts for a recipient public key.</t>

<t>HPKE works for any combination of an asymmetric key encapsulation mechanism (KEM),
key derivation function (KDF), and authenticated encryption with
additional data (AEAD) encryption function. Authentication for HPKE in COSE is
provided by COSE-native security mechanisms.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Hybrid public-key encryption (HPKE) <xref target="I-D.irtf-cfrg-hpke"/> is a scheme that 
provides public key encryption of arbitrary-sized plaintexts given a 
recipient’s public key. HPKE utilizes a non-interactive ephemeral-static 
Diffie-Hellman exchange to establish a shared secret. The motivation for
standardizing a public key encryption scheme is explained in the introduction
of <xref target="I-D.irtf-cfrg-hpke"/>.</t>

<t>The HPKE specification defines several features for use with public key encryption
and a subset of those features is applied to COSE <xref target="RFC8152"/>. Since COSE provides
constructs for authentication, those are not re-used from the HPKE specification.
This specification uses the “base” mode, as it is called in HPKE specification
language.</t>

</section>
<section anchor="conventions-and-terminology" title="Conventions and Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”,
“SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this
document are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
when, and only when, they appear in all capitals, as shown here.</t>

<t>This specification uses the following abbreviations and terms:
- Content-encryption key (CEK), a term defined in CMS <xref target="RFC2630"/>.
- Hybrid Public Key Encryption (HPKE) is defined in <xref target="I-D.irtf-cfrg-hpke"/>.
- pkR is the public key of the recipient, as defined in <xref target="I-D.irtf-cfrg-hpke"/>.
- skR is the private key of the recipient, as defined in <xref target="I-D.irtf-cfrg-hpke"/>.</t>

</section>
<section anchor="hpke-for-cose" title="HPKE for COSE">

<section anchor="overview" title="Overview">

<t>The CDDL for the COSE_Encrypt structure, as used with this specification,
is shown in <xref target="cddl-hpke"/>.</t>

<t>HPKE, when used with COSE, follows a three layer structure:</t>

<t><list style="symbols">
  <t>Layer 0 (corresponding to the COSE_Encrypt structure) contains content (plaintext)
encrypted with the CEK. This ciphertext may be detached. If not detached, then
it is included in the COSE_Encrypt structure.</t>
  <t>Layer 1 (see COSE_recipient_outer structure) includes the encrypted CEK.</t>
  <t>Layer 2 (in the COSE_recipient_inner structure) contains parameters needed for 
HPKE to generate a shared secret used to encrypt the CEK found in layer 1.</t>
</list></t>

<t>This three-layer structure is used to encrypt content that can also be shared with
multiple parties at the expense of a single additional encryption operation.
As stated above, the specification uses a CEK to encrypt the content at layer 0.
For example, the content to be encrypted at layer 0 may be a firmware image.
Then, a single firmware image can be encrypted with the same CEK once while
each recipient receives the CEK encrypted differently.</t>

<figure title="CDDL for HPKE-based COSE_Encrypt Structure" anchor="cddl-hpke"><artwork><![CDATA[
COSE_Encrypt_Tagged = #6.96(COSE_Encrypt)
 
HPKE_Encryption_Info = COSE_Encrypt_Tagged

; Layer 0
COSE_Encrypt = [
  Headers,
  ciphertext : bstr / nil,
  recipients : [+COSE_recipient_outer]
]

; Layer 1   
COSE_recipient_outer = [
  protected   : bstr .size 0,
  unprotected : header_map, ; must contain alg
  encCEK      : bstr, ; CEK encrypted with HPKE-derived shared secret
  recipients  : [ + COSE_recipient_inner ]  
]

; Layer 2
COSE_recipient_inner = [
  protected   : bstr .cbor header_map, ; must contain HPKE alg
  unprotected : header_map, ; must contain kid and ephemeral public key
  empty       : null,
  empty       : null
]

header_map = {
  Generic_Headers,
  * label =values,
}
]]></artwork></figure>

<t>The COSE_recipient_outer structure shown in <xref target="cddl-hpke"/> includes the
encrypted CEK (in the encCEK structure) and the COSE_recipient_inner structure,
also shown in <xref target="cddl-hpke"/>, contains the ephemeral public key
(in the unprotected structure).</t>

</section>
<section anchor="hpke-encryption-with-sealbase" title="HPKE Encryption with SealBase">

<t>The SealBase(pkR, info, aad, pt) function is used to encrypt a plaintext pt to
a recipient’s public key (pkR).</t>

<t>IMPORTANT: For use in this specification, the plaintext “pt” passed into the
SealBase is the CEK. The CEK is a random byte sequence of length appropriate
for the encryption algorithm selected in layer 0. For example, AES-128-GCM
requires a 16 byte key and the CEK would therefore be 16 bytes long.</t>

<t>The “info” parameter can be used to influence the generation of keys and the
“aad” parameter provides additional authenticated data to the AEAD algorithm
in use. If successful, SealBase() will output a ciphertext “ct” and an encapsulated
key “enc”.  The content of enc is the ephemeral public key.</t>

<t>The content of the info parameter is based on the ‘COSE_KDF_Context’ structure,
which is detailed in <xref target="cddl-cose-kdf"/>.</t>

</section>
<section anchor="hpke-decryption-with-openbase" title="HPKE Decryption with OpenBase">

<t>The recipient will use the OpenBase(enc, skR, info, aad, ct) function with the enc and
ct parameters received from the sender. The “aad” and the “info” parameters are obtained
via the context of the usage.</t>

<t>The OpenBase function will, if successful, decrypt “ct”. When decrypted, the result
will be the CEK. The CK is the symmetric key used to decrypt the ciphertext in layer 0
of the COSE_Encrypt structure.</t>

</section>
<section anchor="info-structure" title="Info Structure">

<t>This specification re-uses the context information structure defined in
<xref target="RFC8152"/> for use with the HPKE algorithm. This payload becomes the content
of the info parameter for the HPKE functions. For better readability of this specification
the COSE_KDF_Context structure is repeated in <xref target="cddl-cose-kdf"/>.</t>

<figure title="COSE_KDF_Context Data Structure for info parameter" anchor="cddl-cose-kdf"><artwork><![CDATA[
   PartyInfo = (
       identity : bstr / nil,
       nonce : bstr / int / nil,
       other : bstr / nil
   )

   COSE_KDF_Context = [
       AlgorithmID : int / tstr,
       PartyUInfo : [ PartyInfo ],
       PartyVInfo : [ PartyInfo ],
       SuppPubInfo : [
           keyDataLength : uint,
           protected : empty_or_serialized_map,
           ? other : bstr
       ],
       ? SuppPrivInfo : bstr
   ]
]]></artwork></figure>

<t>Since this specification may be used in a number of different deployment environments
flexibility for populating the fields in the COSE_KDF_Context structure is provided.</t>

<t>For better interoperability, the following recommended settings
are provided:</t>

<t><list style="symbols">
  <t>PartyUInfo.identity corresponds to the kid found in the
COSE_Sign_Tagged or COSE_Sign1_Tagged structure (when a digital
signature is used). When utilizing a MAC, then the kid is found in
the COSE_Mac_Tagged or COSE_Mac0_Tagged structure.</t>
  <t>PartyVInfo.identity corresponds to the kid used for the respective
recipient from the inner-most recipients array.</t>
  <t>The value in the AlgorithmID field corresponds to the alg parameter
in the protected structure in the inner-most recipients array.</t>
  <t>keyDataLength is set to the number of bits of the desired output value.</t>
  <t>protected refers to the protected structure of the inner-most array.</t>
</list></t>

</section>
</section>
<section anchor="example" title="Example">

<t>An example of the COSE_Encrypt structure using the HPKE scheme is
shown in <xref target="hpke-example"/>. It uses the following algorithm
combination:</t>

<t><list style="symbols">
  <t>AES-GCM-128 for encryption of detached ciphertext in layer 0.</t>
  <t>AES-GCM-128 for encryption of the CEK in layer 1.</t>
  <t>NIST P-256 and HKDF-SHA256 as a Key Encapsulation Mechanism (KEM) in
layer 2.</t>
</list></t>

<t>The algorithm selection is based on the registry of the values offered
by the alg parameters (in layer 0 and layer 1) as well as in the hpke-alg
parameter in layer 2. The hpke-alg parameter is a newly defined parameter
registered via the IANA COSE Header Parameter registry defined in <xref target="RFC8152"/>.</t>

<figure title="COSE_Encrypt Example for HPKE" anchor="hpke-example"><artwork><![CDATA[
96( 
    [
        // protected field with alg=AES-GCM-128
        h'A10101',   
        {    // unprotected field with iv
             5: h'26682306D4FB28CA01B43B80'
        }, 
        // null because of detached ciphertext
        null,  
        [  // COSE_recipient_outer
            h'',          // empty protected field
            {             // unprotected field with ... 
                 1: 1     //     alg=A128GCM
            },
            // Encrypted CEK
            h'FA55A50CF110908DA6443149F2C2062011A7D8333A72721A',
            / recipients / [  // COSE_recipient_inner
             [
               / protected / h'a1013818' / {
                   \ hpke-alg \ 1:16 \ HPKE/P-256+HKDF-256 \
                 } / ,
               / unprotected / {
                 // HPKE encapsulated key
                 / ephemeral / -1:{
                   / kty / 1:2,
                   / crv / -1:1,
                   / x / -2:h'98f50a4ff6c05861c8...90bbf91d6280',
                   / y / -3:true
                 },
                 // kid for recipient static ECDH public key
                 / kid / 4:'meriadoc.brandybuck@buckland.example'
               },
               // empty ciphertext
               / ciphertext / h''
             ]
            ]
        ]
     ]
)
]]></artwork></figure>

</section>
<section anchor="sec-cons" title="Security Considerations">

<t>This specification is based on HPKE and the security considerations of HPKE
<xref target="I-D.irtf-cfrg-hpke"/> are therefore applicable also to this specification.</t>

<t>HPKE assumes the sender is in possession of the public key of the recipient and
HPKE COSE makes the same assumptions. Some form of public key distribution
mechanism is assumed to exist.</t>

<t>Since the CEK is randomly generated it must be ensured that the guidelines for
random number generations are followed, see <xref target="RFC8937"/>.</t>

<t>The HPKE_Encryption_Info structure shown in this document does not provide
authentication. Hence, the HPKE_Encryption_Info structure has to be used in
combination with other COSE constructs, such as the COSE_Sign or COSE_Sign1.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This document requests IANA to register a new parameter, called hpke-alg,
in the COSE Header Parameter registry defined in <xref target="RFC8152"/>:</t>

<t><list style="symbols">
  <t>Name:  HPKE Key Encapsulation Mechanism (KEM) Algorithm</t>
  <t>Label:  TBD1</t>
  <t>Value Type: uint</t>
  <t>Value Registry: The values in this parameter are based on the
Key Encapsulation Mechanisms (KEMs) registry established by the
HPKE specification <xref target="RFC8152"/>.</t>
  <t>Description: This parameter carries information about the Key
Encapsulation Mechanism (KEM) to be used according to the HPKE specification.
The registry for KEMs established by <xref target="RFC8152"/> is re-used.</t>
  <t>Reference:  [[TBD: This RFC]]</t>
</list></t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>


<reference anchor='I-D.irtf-cfrg-hpke'>
   <front>
      <title>Hybrid Public Key Encryption</title>
      <author fullname='Richard L. Barnes'>
	 <organization>Cisco</organization>
      </author>
      <author fullname='Karthik Bhargavan'>
	 <organization>Inria</organization>
      </author>
      <author fullname='Benjamin Lipp'>
	 <organization>Inria</organization>
      </author>
      <author fullname='Christopher A. Wood'>
	 <organization>Cloudflare</organization>
      </author>
      <date day='2' month='September' year='2021'/>
      <abstract>
	 <t>   This document describes a scheme for hybrid public-key encryption
   (HPKE).  This scheme provides a variant of public-key encryption of
   arbitrary-sized plaintexts for a recipient public key.  It also
   includes three authenticated variants, including one which
   authenticates possession of a pre-shared key, and two optional ones
   which authenticate possession of a KEM private key.  HPKE works for
   any combination of an asymmetric key encapsulation mechanism (KEM),
   key derivation function (KDF), and authenticated encryption with
   additional data (AEAD) encryption function.  Some authenticated
   variants may not be supported by all KEMs.  We provide instantiations
   of the scheme using widely used and efficient primitives, such as
   Elliptic Curve Diffie-Hellman key agreement, HKDF, and SHA2.

   This document is a product of the Crypto Forum Research Group (CFRG)
   in the IRTF.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-irtf-cfrg-hpke-12'/>
   <format target='https://www.ietf.org/archive/id/draft-irtf-cfrg-hpke-12.txt' type='TXT'/>
</reference>



<reference anchor='RFC8152' target='https://www.rfc-editor.org/info/rfc8152'>
<front>
<title>CBOR Object Signing and Encryption (COSE)</title>
<author fullname='J. Schaad' initials='J.' surname='Schaad'><organization/></author>
<date month='July' year='2017'/>
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need for the ability to have basic security services defined for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  This specification additionally describes how to represent cryptographic keys using CBOR.</t></abstract>
</front>
<seriesInfo name='RFC' value='8152'/>
<seriesInfo name='DOI' value='10.17487/RFC8152'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC8937' target='https://www.rfc-editor.org/info/rfc8937'>
<front>
<title>Randomness Improvements for Security Protocols</title>
<author fullname='C. Cremers' initials='C.' surname='Cremers'><organization/></author>
<author fullname='L. Garratt' initials='L.' surname='Garratt'><organization/></author>
<author fullname='S. Smyshlyaev' initials='S.' surname='Smyshlyaev'><organization/></author>
<author fullname='N. Sullivan' initials='N.' surname='Sullivan'><organization/></author>
<author fullname='C. Wood' initials='C.' surname='Wood'><organization/></author>
<date month='October' year='2020'/>
<abstract><t>Randomness is a crucial ingredient for Transport Layer Security (TLS) and related security protocols.  Weak or predictable &quot;cryptographically secure&quot; pseudorandom number generators (CSPRNGs) can be abused or exploited for malicious purposes. An initial entropy source that seeds a CSPRNG might be weak or broken as well, which can also lead to critical and systemic security problems. This document describes a way for security protocol implementations to augment their CSPRNGs using long-term private keys. This improves randomness from broken or otherwise subverted CSPRNGs.</t><t>This document is a product of the Crypto Forum Research Group (CFRG) in the IRTF.</t></abstract>
</front>
<seriesInfo name='RFC' value='8937'/>
<seriesInfo name='DOI' value='10.17487/RFC8937'/>
</reference>



<reference anchor='RFC2630' target='https://www.rfc-editor.org/info/rfc2630'>
<front>
<title>Cryptographic Message Syntax</title>
<author fullname='R. Housley' initials='R.' surname='Housley'><organization/></author>
<date month='June' year='1999'/>
<abstract><t>This document describes the Cryptographic Message Syntax.  This syntax is used to digitally sign, digest, authenticate, or encrypt arbitrary messages.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2630'/>
<seriesInfo name='DOI' value='10.17487/RFC2630'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>We would like to thank Goeran Selander and John Mattsson for their review feedback.</t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

