<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.1 (Ruby 3.0.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="pre5378Trust200902" docName="draft-ietf-cose-hpke-06" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="COSE HPKE">Use of Hybrid Public-Key Encryption (HPKE) with CBOR Object Signing and Encryption (COSE)</title>

    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization></organization>
      <address>
        <postal>
          <country>Austria</country>
        </postal>
        <email>hannes.tschofenig@gmx.net</email>
      </address>
    </author>
    <author initials="O." surname="Steele" fullname="Orie Steele" role="editor">
      <organization>Transmute</organization>
      <address>
        <postal>
          <country>United States</country>
        </postal>
        <email>orie@transmute.industries</email>
      </address>
    </author>
    <author initials="D." surname="Ajitomi" fullname="Daisuke Ajitomi">
      <organization></organization>
      <address>
        <postal>
          <country>Japan</country>
        </postal>
        <email>dajiaji@gmail.com</email>
      </address>
    </author>
    <author initials="L." surname="Lundblade" fullname="Laurence Lundblade">
      <organization>Security Theory LLC</organization>
      <address>
        <postal>
          <country>United States</country>
        </postal>
        <email>lgl@securitytheory.com</email>
      </address>
    </author>

    <date year="2023" month="September" day="30"/>

    <area>Security</area>
    <workgroup>COSE</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 53?>

<t>This specification defines hybrid public-key encryption (HPKE) for use with 
CBOR Object Signing and Encryption (COSE). HPKE offers a variant of
public-key encryption of arbitrary-sized plaintexts for a recipient public key.</t>

<t>HPKE works for any combination of an asymmetric key encapsulation mechanism (KEM),
key derivation function (KDF), and authenticated encryption with
additional data (AEAD) function. Authentication for HPKE in COSE is
provided by COSE-native security mechanisms.</t>

<t>This document defines the use of the HPKE with COSE.</t>



    </abstract>



  </front>

  <middle>


<?line 66?>

<section anchor="introduction"><name>Introduction</name>

<t>Hybrid public-key encryption (HPKE) <xref target="RFC9180"/> is a scheme that 
provides public key encryption of arbitrary-sized plaintexts given a 
recipient's public key. HPKE utilizes a non-interactive ephemeral-static 
Diffie-Hellman exchange to establish a shared secret. The motivation for
standardizing a public key encryption scheme is explained in the introduction
of <xref target="RFC9180"/>.</t>

<t>The HPKE specification defines several features for use with public key encryption
and a subset of those features is applied to COSE (<xref target="RFC9052"/>, <xref target="RFC9053"/>). Since COSE provides
constructs for authentication, those are not re-used from the HPKE specification.
This specification uses the "base" mode, as it is called in HPKE specification
language.</t>

</section>
<section anchor="conventions-and-terminology"><name>Conventions and Terminology</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
"SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
when, and only when, they appear in all capitals, as shown here.</t>

<t>This specification uses the following abbreviations and terms:</t>

<t><list style="symbols">
  <t>Content-encryption key (CEK), a term defined in CMS <xref target="RFC2630"/>.</t>
  <t>Hybrid Public Key Encryption (HPKE) is defined in <xref target="RFC9180"/>.</t>
  <t>pkR is the public key of the recipient, as defined in <xref target="RFC9180"/>.</t>
  <t>skR is the private key of the recipient, as defined in <xref target="RFC9180"/>.</t>
  <t>Key Encapsulation Mechanism (KEM), see <xref target="RFC9180"/>.</t>
  <t>Key Derivation Function (KDF), see <xref target="RFC9180"/>.</t>
  <t>Authenticated Encryption with Associated Data (AEAD), see <xref target="RFC9180"/>.</t>
  <t>Additional Authenticated Data (AAD), see <xref target="RFC9180"/>.</t>
</list></t>

</section>
<section anchor="hpke-for-cose"><name>HPKE for COSE</name>

<section anchor="overview"><name>Overview</name>

<t>This specification supports two uses of HPKE in COSE, namely</t>

<t><list style="symbols">
  <t>HPKE in a single recipient setup.
This use case utilizes a one layer COSE structure. 
<xref target="one-layer"/> provides the details.</t>
  <t>HPKE in a multiple recipient setup. 
This use case requires a two layer COSE structure.  <xref target="two-layer"/> 
provides the details. While it is possible to support the single 
recipient use case with a two layer structure, the single 
layer setup is more efficient.</t>
</list></t>

<t>In both cases a new COSE header parameter, called 'encapsulated_key',
is used to convey the content of the enc structure defined in the HPKE
specification. "Enc" represents the serialized public key.</t>

<t>When the alg value is set to any of algorithms registered by this
specification then the 'encapsulated_key' header parameter MUST
be present in the unprotected header parameter.</t>

<t>The 'encapsulated_key' parameter contains the encapsulated key, which is
output of the HPKE KEM, and is a bstr.</t>

<section anchor="one-layer"><name>Single Recipient / One Layer Structure</name>

<t>With the one layer structure the information carried inside the 
COSE_recipient structure is embedded inside the COSE_Encrypt0.</t>

<t>HPKE is used to directly encrypt the plaintext. The resulting ciphertext
MAY be included in the COSE_Encrypt0 or MAY be detached. If a payload is
transported separately then it is called "detached content". A nil CBOR
object is placed in the location of the ciphertext. See Section 5
of <xref target="RFC9052"/> for a description of detached payloads.</t>

<t>The sender MUST set the alg parameter in the protected header, which
indicates the use of HPKE.</t>

<t>The sender MUST place the 'encapsulated_key' parameter into the unprotected
header. Although the use of the kid parameter in COSE_Encrypt0 is
discouraged by RFC 9052, this specification allows profiles of this
specification to use the kid parameter (or other parameters) to
identify the static recipient public key used by the sender. If the
COSE_Encrypt0 contains the kid then the recipient may use it to
select the appropriate private key.</t>

<t><xref target="cddl-hpke-one-layer"/> shows the COSE_Encrypt0 CDDL structure.</t>

<figure title="CDDL for HPKE-based COSE_Encrypt0 Structure" anchor="cddl-hpke-one-layer"><artwork><![CDATA[
COSE_Encrypt0_Tagged = #6.16(COSE_Encrypt0)

; Layer 0
COSE_Encrypt0 = [
    Headers,
    ciphertext : bstr / nil,
]
]]></artwork></figure>

<t>The COSE_Encrypt0 MAY be tagged or untagged.</t>

<t>An example is shown in <xref target="one-layer-example"/>.</t>

</section>
<section anchor="two-layer"><name>Multiple Recipients / Two Layer Structure</name>

<t>With the two layer structure the HPKE information is conveyed in the COSE_recipient 
structure, i.e. one COSE_recipient structure per recipient.</t>

<t>In this approach the following layers are involved:</t>

<t><list style="symbols">
  <t>Layer 0 (corresponding to the COSE_Encrypt structure) contains the content (plaintext)
encrypted with the CEK. This ciphertext MAY be detached. If not detached, then
it is included in the COSE_Encrypt structure.</t>
  <t>Layer 1 (corresponding to a recipient structure) contains parameters needed for 
HPKE to generate a shared secret used to encrypt the CEK. This layer conveys the 
encrypted CEK in the encCEK structure. The protected header MUST contain the HPKE 
alg parameter and the unprotected header MUST contain the 'encapsulated_key' parameter.
The unprotected header MAY contain the kid parameter to identify the static recipient
public key the sender has been using with HPKE.</t>
</list></t>

<t>This two-layer structure is used to encrypt content that can also be shared with
multiple parties at the expense of a single additional encryption operation.
As stated above, the specification uses a CEK to encrypt the content at layer 0.</t>

<t>The COSE_recipient structure, shown in <xref target="cddl-hpke"/>, is repeated for each
recipient.</t>

<figure title="CDDL for HPKE-based COSE_Encrypt Structure" anchor="cddl-hpke"><artwork><![CDATA[
COSE_Encrypt_Tagged = #6.96(COSE_Encrypt)
 
/ Layer 0 /
COSE_Encrypt = [
  Headers,
  ciphertext : bstr / nil,
  recipients : + COSE_recipient
]

/ Layer 1 /
COSE_recipient = [
  protected   : bstr .cbor header_map,
  unprotected : header_map,
  encCEK      : bstr,
]

header_map = {
  Generic_Headers,
  * label => values,
}
]]></artwork></figure>

<t>The COSE_Encrypt MAY be tagged or untagged.</t>

<t>An example is shown in <xref target="two-layer-example"/>.</t>

</section>
</section>
</section>
<section anchor="examples"><name>Examples</name>

<section anchor="one-layer-example"><name>Single Recipient / One Layer Example</name>

<t>This example assumes that a sender wants to communicate an
encrypted payload to a single recipient in the most efficient way.</t>

<t>An example of the COSE_Encrypt0 structure using the HPKE scheme is
shown in <xref target="hpke-example-one"/>. Line breaks and comments have been inserted
for better readability.</t>

<t>This example uses HPKE-v1-Base-P256-SHA256-AES128GCM as the algorithm,
which correspond to the following HPKE algorithm combination:</t>

<t><list style="symbols">
  <t>KEM: DHKEM(P-256, HKDF-SHA256)</t>
  <t>KDF: HKDF-SHA256</t>
  <t>AEAD: AES-128-GCM</t>
  <t>Mode: Base</t>
  <t>payload: "This is the content"</t>
  <t>aad: ""</t>
</list></t>

<figure title="COSE_Encrypt0 Example for HPKE" anchor="hpke-example-one"><artwork><![CDATA[
16([
    / alg = HPKE-v1-Base-P256-SHA256-AES128GCM /
    h'a1011823',
    {
        / kid /
        4: h'3031',
        / encapsulated_key /
        36: h'048c6f75e463a773082f3cb0d3a701348a578c67
              80aba658646682a9af7291dfc277ec93c3d58707
              818286c1097825457338dc3dcaff367e2951342e
              9db30dc0e7',
    },
    / encrypted plaintext /
    h'ee22206308e478c279b94bb071f3a5fbbac412a6effe34195f7
      c4169d7d8e81666d8be13',
])
]]></artwork></figure>

</section>
<section anchor="two-layer-example"><name>Multiple Recipients / Two Layer</name>

<t>In this example we assume that a sender wants to transmit a
payload to two recipients using the two-layer structure.
Note that it is possible to send two single-layer payloads, 
although it will be less efficient.</t>

<t>An example of the COSE_Encrypt structure using the HPKE scheme is
shown in <xref target="hpke-example-two"/>. Line breaks and comments have been
inserted for better readability.</t>

<t>This example uses AES-128-GCM for encryption of the plaintext
"This is the content." with aad="" at layer 0. The ciphertext is
detached.</t>

<t>At the recipient structure at layer 1, this example uses
HPKE-v1-Base-P256-SHA256-AES128GCM as the algorithm, which
correspond to the following HPKE algorithm combination:</t>

<t><list style="symbols">
  <t>KEM: DHKEM(P-256, HKDF-SHA256)</t>
  <t>KDF: HKDF-SHA256</t>
  <t>AEAD: AES-128-GCM</t>
  <t>Mode: Base</t>
</list></t>

<figure title="COSE_Encrypt Example for HPKE" anchor="hpke-example-two"><artwork><![CDATA[
96_0([
    / alg = AES-128-GCM (1) /
    h'a10101',
    {
      / iv /
      5: h'67303696a1cc2b6a64867096'
    },
    / detached ciphertext /
    h'',
    [
        [
            / alg = HPKE-v1-Base-P256-SHA256-AES128GCM /
            h'a1011823',
            {
                / kid /
                4: h'3031',
                / encapsulated_key /
                36: h'0421ccd1b00dd958d77e10399c
                      97530fcbb91a1dc71cb3bf41d9
                      9fd39f22918505c973816ecbca
                      6de507c4073d05cceff73e0d35
                      f60e2373e09a9433be9e95e53c',
            },
            / ciphertext containing encrypted CEK /
            h'bb2f1433546c55fb38d6f23f5cd95e1d72eb4
              c129b99a165cd5a28bd75859c10939b7e4d',
        ],
        [
            / alg = HPKE-v1-Base-P256-SHA256-AES128GCM /
            h'a1011823',
            {
                / kid /
                4: h'313233', // kid
                / encapsulated_key /
                36: h'6de507c4073d05cceff73e0d35
                      f60e2373e09a9433be9e95e53c
                      9fd39f22918505c973816ecbca
                      6de507c4073d05cceff73e0d35
                      f60e2373e09a9433be9e95e53c',
            },
            / ciphertext containing encrypted CEK /
            h'c4169d7d8e81666d8be13bb2f1433546c55fb
              c129b99a165cd5a28bd75859c10939b7e4d',
        ]        
    ],
])
]]></artwork></figure>

<t>To offer authentication of the sender the payload in <xref target="hpke-example-two"/>
is signed with a COSE_Sign1 wrapper, which is outlined in <xref target="hpke-example-sign"/>.
The payload in <xref target="hpke-example-sign"/> is meant to contain the content of
<xref target="hpke-example-two"/>.</t>

<figure title="COSE_Encrypt Example for HPKE" anchor="hpke-example-sign"><artwork><![CDATA[
18(
  [
    / protected / h'a10126' / {
            \ alg \ 1:-7 \ ECDSA 256 \
          } / ,
    / unprotected / {
          / kid / 4:'sender@example.com'
        },
    / payload /     h'AA19...B80C',
    / signature /   h'E3B8...25B8'
  ]
)
]]></artwork></figure>

</section>
</section>
<section anchor="sec-cons"><name>Security Considerations</name>

<t>This specification is based on HPKE and the security considerations of HPKE
<xref target="RFC9180"/> are therefore applicable also to this specification.</t>

<t>HPKE assumes the sender is in possession of the public key of the recipient and
HPKE COSE makes the same assumptions. Hence, some form of public key distribution
mechanism is assumed to exist.</t>

<t>HPKE relies on a source of randomness to be available on the device. Additionally, 
with the two layer structure the CEK is randomly generated and the it MUST be
ensured that the guidelines in <xref target="RFC8937"/> for random number generations are followed.</t>

<t>HPKE in Base mode does not offer authentication as part of the HPKE KEM. In this
case COSE constructs like COSE_Sign, COSE_Sign1, COSE_MAC, or COSE_MAC0 can be
used. HPKE also offers modes that offer authentication.</t>

<t>If COSE_Encrypt or COSE_Encrypt0 is used with a detached ciphertext then the
subsequently applied integrity protection via COSE_Sign, COSE_Sign1, COSE_MAC, 
or COSE_MAC0 does not cover this detached ciphertext. Implementers MUST ensure
that the detached ciphertext also experiences integrity protection. This is, for
example, the case when an AEAD cipher is used to produce the detached ciphertext
but may not be guaranteed by non-AEAD ciphers.</t>

</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>This document requests IANA to add new values to the 'COSE Algorithms' and to 
the 'COSE Header Parameters' registries in the 'Standards Action 
With Expert Review category.</t>

<section anchor="cose-algorithms-registry"><name>COSE Algorithms Registry</name>

<t><list style="symbols">
  <t>Name: HPKE-v1-Base-P256-SHA256-AES128GCM</t>
  <t>Value: TBD1 (Assumed: 35)</t>
  <t>Description: Cipher suite for COSE-HPKE version 1 in Base Mode that uses the DHKEM(P-256, HKDF-SHA256) KEM, the HKDF-SHA256 KDF and the AES-128-GCM AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
  <t>Name: HPKE-v1-Base-X25519_SHA256_ChaCha20Poly1305</t>
  <t>Value: TBD2 (Assumed: 36)</t>
  <t>Description: Cipher suite for COSE-HPKE version 1 in Base Mode that uses the DHKEM(X25519, HKDF-SHA256) KEM, the HKDF-SHA256 KDF, and the ChaCha20Poly1305 AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
  <t>Name: HPKE-v1-Base-P384-SHA384_AES256GCM</t>
  <t>Value: TBD3 (Assumed: 37)</t>
  <t>Description: Cipher suite for COSE-HPKE version 1 in Base Mode that uses the DHKEM(P-384, HKDF-SHA384) KEM, the HKDF-SHA384 KDF, and the AES-256-GCM AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
  <t>Name: HPKE-v1-Base-P521_SHA512_AES256GCM</t>
  <t>Value: TBD4 (Assumed: 38)</t>
  <t>Description: Cipher suite for COSE-HPKE version 1 in Base Mode that uses the DHKEM(P-521, HKDF-SHA512) KEM, the HKDF-SHA512 KDF, and the AES-256-GCM AEAD.</t>
  <t>Capabilities: [kty]</t>
  <t>Change Controller: IESG</t>
  <t>Reference:  [[TBD: This RFC]]</t>
  <t>Recommended: Yes</t>
</list></t>

</section>
<section anchor="cose-header-parameters"><name>COSE Header Parameters</name>

<t><list style="symbols">
  <t>Name: encapsulated_key</t>
  <t>Label: TBDX (Assumed: 36)</t>
  <t>Value type: bstr</t>
  <t>Value Registry: N/A</t>
  <t>Description: HPKE encapsulated key</t>
  <t>Reference: [[This specification]]</t>
</list></t>

</section>
</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>

<reference anchor="RFC9180">
  <front>
    <title>Hybrid Public Key Encryption</title>
    <author fullname="R. Barnes" initials="R." surname="Barnes"/>
    <author fullname="K. Bhargavan" initials="K." surname="Bhargavan"/>
    <author fullname="B. Lipp" initials="B." surname="Lipp"/>
    <author fullname="C. Wood" initials="C." surname="Wood"/>
    <date month="February" year="2022"/>
    <abstract>
      <t>This document describes a scheme for hybrid public key encryption (HPKE). This scheme provides a variant of public key encryption of arbitrary-sized plaintexts for a recipient public key. It also includes three authenticated variants, including one that authenticates possession of a pre-shared key and two optional ones that authenticate possession of a key encapsulation mechanism (KEM) private key. HPKE works for any combination of an asymmetric KEM, key derivation function (KDF), and authenticated encryption with additional data (AEAD) encryption function. Some authenticated variants may not be supported by all KEMs. We provide instantiations of the scheme using widely used and efficient primitives, such as Elliptic Curve Diffie-Hellman (ECDH) key agreement, HMAC-based key derivation function (HKDF), and SHA2.</t>
      <t>This document is a product of the Crypto Forum Research Group (CFRG) in the IRTF.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9180"/>
  <seriesInfo name="DOI" value="10.17487/RFC9180"/>
</reference>

<reference anchor="RFC9052">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="96"/>
  <seriesInfo name="RFC" value="9052"/>
  <seriesInfo name="DOI" value="10.17487/RFC9052"/>
</reference>

<reference anchor="RFC9053">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines a set of algorithms that can be used with the CBOR Object Signing and Encryption (COSE) protocol (RFC 9052).</t>
      <t>This document, along with RFC 9052, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9053"/>
  <seriesInfo name="DOI" value="10.17487/RFC9053"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC8937">
  <front>
    <title>Randomness Improvements for Security Protocols</title>
    <author fullname="C. Cremers" initials="C." surname="Cremers"/>
    <author fullname="L. Garratt" initials="L." surname="Garratt"/>
    <author fullname="S. Smyshlyaev" initials="S." surname="Smyshlyaev"/>
    <author fullname="N. Sullivan" initials="N." surname="Sullivan"/>
    <author fullname="C. Wood" initials="C." surname="Wood"/>
    <date month="October" year="2020"/>
    <abstract>
      <t>Randomness is a crucial ingredient for Transport Layer Security (TLS) and related security protocols. Weak or predictable "cryptographically secure" pseudorandom number generators (CSPRNGs) can be abused or exploited for malicious purposes. An initial entropy source that seeds a CSPRNG might be weak or broken as well, which can also lead to critical and systemic security problems. This document describes a way for security protocol implementations to augment their CSPRNGs using long-term private keys. This improves randomness from broken or otherwise subverted CSPRNGs.</t>
      <t>This document is a product of the Crypto Forum Research Group (CFRG) in the IRTF.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8937"/>
  <seriesInfo name="DOI" value="10.17487/RFC8937"/>
</reference>

<reference anchor="RFC2630">
  <front>
    <title>Cryptographic Message Syntax</title>
    <author fullname="R. Housley" initials="R." surname="Housley"/>
    <date month="June" year="1999"/>
    <abstract>
      <t>This document describes the Cryptographic Message Syntax. This syntax is used to digitally sign, digest, authenticate, or encrypt arbitrary messages. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2630"/>
  <seriesInfo name="DOI" value="10.17487/RFC2630"/>
</reference>




    </references>


<?line 430?>

<section anchor="contributors"><name>Contributors</name>

<t>We would like thank the following individuals for their contributions
to the design of embedding the HPKE output into the COSE structure 
following a long and lively mailing list discussion.</t>

<t><list style="symbols">
  <t>Richard Barnes</t>
  <t>Ilari Liusvaara</t>
</list></t>

<t>Finally, we would like to thank Russ Housley and Brendan Moran for their
contributions to the draft as co-authors of initial versions.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

<t>We would like to thank John Mattsson, Mike Prorock, Michael Richardson,
and Goeran Selander for their review feedback.</t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

